(dp0
S'13666122'
p1
(iQuestion
Question
p2
(dp3
S'isAnswered'
p4
I01
sS'question_score'
p5
I20
sS'tags'
p6
(lp7
Vc++
p8
aVvisual-studio-2010
p9
aVvisual-studio
p10
aVvcproj
p11
aVvcxproj
p12
asS'title'
p13
Vvisual studio project files
p14
sS'answer_score'
p15
I21
sS'question_body'
p16
S"<p>What is the difference between a <strong>.vcproj</strong> and a <strong>.vcxproj</strong> Visual Studio project file? Is the <strong>.vcproj</strong> format only available in versions of Visual Studio prior to 2010?</p>\n\n<p>I ask because I am reading an MSDN tutorial dated 10/12 which says to insert text into a certain area of the .vcproj file that doesn't exist in the .vcxproj file. Trying to put the text in a similar area breaks the project.</p>\n"
p17
sS'answer'
p18
VBuild System Changes > Project files no longer use the .vcproj file name\u000aextension. Visual Studio automatically converts project files that were\u000acreated by an earlier release of Visual C++ to the format that is used by the\u000acurrent system. For more information about how to manually upgrade a project,\u000asee /Upgrade (devenv.exe). > > The MSBuild system is used to build Visual C++\u000aprojects. However, in Visual Studio 2008 and earlier releases, the VCBuild\u000asystem was used. Certain file types and concepts that depended on VCBuild\u000aeither do not exist or are represented differently in the current system. > >\u000aIn the current release, the file name extension for a project file is\u000a.vcxproj. Here is your answer: it has been changed from .vcproj to .vcxproj\u000a\u000a
p19
sS'lastActivityDate'
p20
I1453328368
sS'question_id'
p21
I13666122
sS'approved'
p22
I01
sS'answerFetched'
p23
I01
sS'answer_id'
p24
I13666143
sbsS'335408'
p25
(iQuestion
Question
p26
(dp27
g4
I01
sg5
I52
sg6
(lp28
Vc++
p29
aVvisual-studio
p30
aVheader
p31
asg13
VWhere does Visual Studio look for C++ Header files?
p32
sg15
I67
sg16
S"<p>I checked out a copy of a C++ application from SourceForge (HoboCopy, if you're curious) and tried to compile it.  Visual Studio tells me that it can't find a particular header file.  I found the file in the source tree, but where do I need to put it, so that it will be found when compiling?<br>\nAre there special directories?</p>\n"
p33
sg18
VVisual Studio looks for headers in this order\u000a\u000a  * in the current source directory \u000a  * in the Additional Include Directories in the project properties. (Under C++ | General)\u000a  * in the Visual Studio C++ Include directories under Tools | Options | Projects and Solutions | VC++ Directories.\u000a\u000aIn your case, add the directory that the header is in to the project\u000aproperties.\u000a\u000a
p34
sg20
I1456440512
sg21
I335408
sg22
I01
sg23
I01
sg24
I335426
sbsS'859304'
p35
(iQuestion
Question
p36
(dp37
g4
I01
sg5
I33
sg6
(lp38
Vc++
p39
aVvisual-studio
p40
aVvisual-c++
p41
aVunicode
p42
aVmfc
p43
asg13
VConvert CString to const char*
p44
sg15
I47
sg16
S'<p>How do I convert from <code>CString</code> to <code>const char*</code> in my Unicode MFC application?</p>\n'
p45
sg18
VTo convert a TCHAR CString to ASCII, use the CT2A macro - this will also allow\u000ayou to convert the string to UTF8 (or any other Windows code page):\u000a\u000a    \u000a    \u000a    // Convert using the local code page\u000a    CString str(_T("Hello, world!"));\u000a    CT2A ascii(str);\u000a    TRACE(_T("ASCII: %S\u005cn"), ascii.m_psz);\u000a    \u000a    // Convert to UTF8\u000a    CString str(_T("Some Unicode goodness"));\u000a    CT2A ascii(str, CP_UTF8);\u000a    TRACE(_T("UTF8: %S\u005cn"), ascii.m_psz);\u000a    \u000a    // Convert to Thai code page\u000a    CString str(_T("Some Thai text"));\u000a    CT2A ascii(str, 874);\u000a    TRACE(_T("Thai: %S\u005cn"), ascii.m_psz);\u000a    \u000a\u000aThere is also a macro to convert from ASCII -> Unicode (CA2T) and you can use\u000athese in ATL/WTL apps as long as you have VS2003 or greater.\u000a\u000aSee the MSDN for more info.\u000a\u000a
p46
sg20
I1436577727
sg21
I859304
sg22
I01
sg23
I01
sg24
I859841
sbsS'70013'
p47
(iQuestion
Question
p48
(dp49
g4
I01
sg5
I180
sg6
(lp50
Vc++
p51
aVvisual-studio
p52
aVvisual-studio-2008
p53
asg13
VHow to Detect if I'm Compiling Code With Visual Studio 2008?
p54
sg15
I366
sg16
S"<p>Is there any way to know if I'm compiling under Microsoft Visual Studio 2008 ?</p>\n"
p55
sg18
V_MSC_VER is what you need. You can also examine visualc.hpp in any recent\u000aboost install for some usage examples. Some values for the more recent\u000aversions of the compiler are: MSVC++ 14.0 _MSC_VER == 1900 (Visual Studio\u000a2015) MSVC++ 12.0 _MSC_VER == 1800 (Visual Studio 2013) MSVC++ 11.0 _MSC_VER\u000a== 1700 (Visual Studio 2012) MSVC++ 10.0 _MSC_VER == 1600 (Visual Studio 2010)\u000aMSVC++ 9.0 _MSC_VER == 1500 (Visual Studio 2008) MSVC++ 8.0 _MSC_VER == 1400\u000a(Visual Studio 2005) MSVC++ 7.1 _MSC_VER == 1310 (Visual Studio 2003) MSVC++\u000a7.0 _MSC_VER == 1300 MSVC++ 6.0 _MSC_VER == 1200 MSVC++ 5.0 _MSC_VER == 1100\u000aThe version number above of course refers to the major version of your Visual\u000astudio you see in the about box, not to the year in the name. A thorough list\u000acan be found here. cl.exe /? will give a hint of the used version, e.g.:\u000ac:\u005cprogram files (x86)\u005cmicrosoft visual studio 11.0\u005cvc\u005cbin>cl /? Microsoft (R)\u000aC/C++ Optimizing Compiler Version 17.00.50727.1 for x86 .....\u000a\u000a
p56
sg20
I1474400686
sg21
I70013
sg22
I01
sg23
I01
sg24
I70630
sbsS'211237'
p57
(iQuestion
Question
p58
(dp59
g4
I01
sg5
I43
sg6
(lp60
Vc++
p61
aVvisual-studio
p62
aVgcc
p63
aVstatic
p64
aVlinker
p65
asg13
VStatic variables initialisation order
p66
sg15
I50
sg16
S'<p>C++ guarantees that variables in a compilation unit (.cpp file) are initialised in order of declaration. For number of compilation units this rule works for each one separately (I mean static variables outside of classes).</p>\n\n<p>But, the order of initialization of variables, is undefined across different compilation units.</p>\n\n<p>Where can I see some explanations about this order for gcc and MSVC (I know that relying on that is a very bad idea - it is just to understand the problems that we may have with legacy code when moving to new GCC major and different OS)?</p>\n'
p67
sS'answerUnsatisfiable'
p68
I01
sg18
VAs you say the order is undefined across different compilation units. Within\u000athe same compilation unit the order is well defined: The same order as\u000adefinition. This is because this is not resolved at the language level but at\u000athe linker level. So you really need to check out the linker documentation.\u000aThough I really doubt this will help in any useful way. For gcc: Check out\u000a**ld** I have found that even changing the order of objects files being linked\u000acan change the initialization order. So it is not just your linker that you\u000aneed to worry about, but how the linker is invoked by your build system. Even\u000atry to solve the problem is practically a non starter. This is generally only\u000aa problem when initializing global that reference each other during their own\u000ainitialization (so only affects objects with constructors). There are\u000atechniques to get around the problem. * Lazy initialization. * Schwarz Counter\u000a* Put all complex global variables inside the same compilation unit.\u000a\u000a
p69
sg20
I1473641616
sg21
I211237
sg23
I01
sg24
I211307
sbsS'134796'
p70
(iQuestion
Question
p71
(dp72
g4
I01
sg5
I46
sg6
(lp73
Vc++
p74
aVvisual-studio
p75
aVvisual-studio-2008
p76
aVvisual-c++
p77
aVvisual-studio-2005
p78
asg13
VAutomatically stop Visual C++ 2008 build at first compile error?
p79
sg15
I25
sg16
S'<p>I know I can compile individual source files, but sometimes -- say, when editing a header file used by many <code>.cpp</code> files -- multiple source files need to be recompiled.  That\'s what Build is for.</p>\n\n<p>Default behavior of the "Build" command in VC9 (Visual C++ 2008) is to attempt to compile all files that need it.  Sometimes this just results in many failed compiles.  I usually just watch for errors and hit ctrl-break to stop the build manually.</p>\n\n<p>Is there a way to configure it such the build stops at the <strong>very first compile error</strong> (not the first failed project build) automatically?</p>\n'
p80
sg68
I01
sg18
VI came up with a better macro guys. It stops immediately after the first\u000aerror/s (soon as build window is updated).\u000a\u000aVisual Studio -> Tools -> Macros -> Macro IDE... (or ALT+F11)\u000a\u000a    \u000a    \u000a    Private Sub OutputWindowEvents_OnPaneUpdated(ByVal pPane As OutputWindowPane) Handles OutputWindowEvents.PaneUpdated\u000a        If Not (pPane.Name = "Build") Then Exit Sub\u000a    \u000a        pPane.TextDocument.Selection.SelectAll()\u000a        Dim Context As String = pPane.TextDocument.Selection.Text\u000a        pPane.TextDocument.Selection.EndOfDocument()\u000a    \u000a        Dim found As Integer = Context.IndexOf(": error ")\u000a    \u000a        If found > 0 Then\u000a            DTE.ExecuteCommand("Build.Cancel")\u000a        End If\u000a    \u000a    End Sub\u000a    \u000a\u000aHope it works out for you guys.\u000a\u000a
p81
sg20
I1441101355
sg21
I134796
sg23
I01
sg24
I1085245
sbsS'75180'
p82
(iQuestion
Question
p83
(dp84
g4
I01
sg5
I107
sg6
(lp85
Vc++
p86
aVc
p87
aVvisual-studio
p88
aVdebugging
p89
asg13
VHow to display a dynamically allocated array in the Visual Studio debugger?
p90
sg15
I146
sg16
S'<p>If you have a statically allocated array, the Visual Studio debugger can easily display all of the array elements.  However, if you have an array allocated dynamically and pointed to by a pointer, it will only display the first element of the array when you click the + to expand it.  Is there an easy way to tell the debugger, show me this data as an array of type Foo and size X?</p>\n'
p91
sg18
VYes, simple. say you have char *a = new char[10]; writing in the debugger:\u000aa,10 would show you the content as if it were an array.\u000a\u000a
p92
sg20
I1439094516
sg21
I75180
sg22
I01
sg23
I01
sg24
I75202
sbsS'363292'
p93
(iQuestion
Question
p94
(dp95
g4
I01
sg5
I67
sg6
(lp96
Vc++
p97
aVvisual-studio
p98
aVvisual-studio-2008
p99
aVvisual-c++
p100
asg13
VWhy is Visual C++ lacking refactor functionality?
p101
sg15
I66
sg16
S"<p>When programming in C++ in Visual Studio 2008, why is there no functionality like that seen in the refactor menu when using C#?</p>\n\n<p>I use <strong>Rename</strong> constantly and you really miss it when it's not there. I'm sure you can get plugins that offer this, but why isn't it integrated in to the IDE when using C++? Is this due to some gotcha in the way that C++ must be parsed?</p>\n"
p102
sg68
I01
sg18
VThe syntax and semantics of C++ make it **incredibly difficult** to correctly\u000aimplement refactoring functionality. It's possible to implement something\u000arelatively simple to cover 90% of the cases, but in the remaining 10% of cases\u000athat simple solution will horribly break your code by changing things you\u000anever wanted to change.\u000a\u000aRead http://yosefk.com/c++fqa/defective.html#defect-8 for a brief discussion\u000aof the difficulties that any refactoring code in C++ has to deal with.\u000a\u000aMicrosoft has evidently decided to punt on this particular feature for C++,\u000aleaving it up to third-party developers to do what they can.\u000a\u000a
p103
sg20
I1466080021
sg21
I363292
sg23
I01
sg24
I363338
sbsS'4845198'
p104
(iQuestion
Question
p105
(dp106
g4
I01
sg5
I44
sg6
(lp107
Vc++
p108
aVvisual-studio
p109
aVvisual-c++
p110
aVcompiler-errors
p111
aVcpu-architecture
p112
asg13
VFatal error: "No Target Architecture" in Visual Studio
p113
sg15
I74
sg16
S'<p>When I try to compile my c++ project using Visual Studio 2010 in either Win32 or x64 mode I get the following error:</p>\n\n<p><code>&gt;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h(135): fatal error C1189: #error :  "No Target Architecture"</code></p>\n\n<p>My preprocessor definitions say WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</p>\n\n<p>What is causing this error and how do I fix it?</p>\n\n<pre><code>// winnt.h: lines 127-136, MSVS says this is an inactive preprocessor block\n#if defined(_WIN64)\n\n#if defined(_AMD64_)\n#define PROBE_ALIGNMENT( _s ) TYPE_ALIGNMENT( DWORD )\n#elif defined(_IA64_)\n#define PROBE_ALIGNMENT( _s ) (TYPE_ALIGNMENT( _s ) &gt; TYPE_ALIGNMENT( DWORD ) ? \\\n                              TYPE_ALIGNMENT( _s ) : TYPE_ALIGNMENT( DWORD ))\n#else\n#error "No Target Architecture"\n#endif\n</code></pre>\n\n<p>Update: I created a new msvs project and copied my code to it. I no longer have <code>error : "No Target Architecture"</code>, but now I have a bunch of compile errors involving winnt.h and winbase.h and no compile errors involving any of my files. Is it possible these files are corrupted? Do I need to reinstall MSVS 2010?</p>\n\n<p>Update 2: So I narrowed down my problem and found that it is <code>#include &lt;WinDef.h&gt;</code> that is causing all of my compile errors with winnt.h but I still don\'t know how to fix it.</p>\n'
p114
sg68
I01
sg18
VUse #include instead of #include . From the windows.h wikipedia page: > There\u000aare a number of child header files that are automatically included with\u000awindows.h. Many of these files cannot simply be included by themselves (they\u000aare not _self-contained_), because of dependencies. windef.h is one of the\u000afiles automatically included with windows.h.\u000a\u000a
p115
sg20
I1448603696
sg21
I4845198
sg23
I01
sg24
I4845893
sbsS'543697'
p116
(iQuestion
Question
p117
(dp118
g4
I01
sg5
I46
sg6
(lp119
Vc++
p120
aVvisual-studio
p121
aVbuild-process
p122
aVbuild
p123
asg13
V#include all .cpp files into a single compilation unit?
p124
sg15
I40
sg16
S"<p>I recently had cause to work with some Visual Studio C++ projects with the usual Debug and Release configurations, but also 'Release All' and 'Debug All', which I had never seen before.</p>\n\n<p>It turns out the author of the projects has a single ALL.cpp which #includes all other .cpp files. The *All configurations just build this one ALL.cpp file. It is of course excluded from the regular configurations, and regular configurations don't build ALL.cpp</p>\n\n<p>I just wondered if this was a common practice? What benefits does it bring? (My first reaction was that it smelled bad.)</p>\n\n<p>What kinds of pitfalls are you likely to encounter with this? One I can think of is if you have anonymous namespaces in your .cpps, they're no longer 'private' to that cpp but now visible in other cpps as well?</p>\n\n<p>All the projects build DLLs, so having data in anonymous namespaces wouldn't be a good idea, right? But functions would be OK?</p>\n\n<p>Cheers.</p>\n"
p125
sg18
VIt's referred to by some (and google-able) as a "Unity Build". It links\u000ainsanely fast and compiles reasonably quickly as well. It's great for builds\u000ayou don't need to iterate on, like a release build from a central server, but\u000ait isn't necessarily for incremental building. And it's a PITA to maintain.\u000aEDIT: here's the first google link for more info: http://buffered.io/posts\u000a/the-magic-of-unity-builds/ The thing that makes it fast is that the compiler\u000aonly needs to read in everything once, compile out, then link, rather than\u000adoing that for every .cpp file. Bruce Dawson has a much better write up about\u000athis on his blog: http://randomascii.wordpress.com/2014/03/22/make-vc-\u000acompiles-fast-through- parallel-compilation/\u000a\u000a
p126
sg20
I1475703055
sg21
I543697
sg22
I01
sg23
I01
sg24
I543762
sbsS'2322876'
p127
(iQuestion
Question
p128
(dp129
g4
I01
sg5
I32
sg6
(lp130
Vc++
p131
ag87
aVvisual-studio
p132
aVvisual-studio-2008
p133
asg13
Vdebugging information cannot be found or does not match visual studio's
p134
sg15
I27
sg16
S'<p>I copied an existing project and renamed the folder. Now I get this error when I try to compile the application </p>\n\n<pre><code>debugging information cannot be found or does not match. No symbols loaded. \nDo you want to continue debugging ?\n</code></pre>\n\n<p>If I click yes, it compiles and runs fine. But now I have to deal with that message. Just curious about what i change in the projects properties to get it to stop. </p>\n'
p135
sg68
I01
sg18
VThe main reason is that you don't have a matching pdb and exe. Some possible\u000asolutions: * You are compiling in release instead of debug * You need to\u000aclean/build or rebuild * You don't have your pdb files being generated in the\u000asame directory as the exe * You have a mismatching pdb, maybe the copied\u000asource is newer than today's date and something isn't building properly. * Try\u000acleaning out all debug object files * You are attaching to a process that you\u000astarted from a different location from where your build exe and pdb exist *\u000aRestart Visual Studio\u000a\u000a
p136
sg20
I1458801467
sg21
I2322876
sg23
I01
sg24
I2322910
sbsS'18298072'
p137
(iQuestion
Question
p138
(dp139
g4
I01
sg5
I30
sg6
(lp140
Vc++
p141
aVvisual-studio
p142
aVvisual-studio-2013
p143
asg13
VHow do I turn off auto-formatting in VS2013 for C++?
p144
sg15
I29
sg16
S"<p>VS2013 has added auto-formatting for C++. My personal opinion on auto-formatting is that it's ultimately harmful for developers but I have to accept not everyone agrees. What bugs me is that I can't seem to disable auto-formatting completely. I have unchecked every checkbox under Tools->Text Editor->C/C++->Formatting->General yet when I type:</p>\n\n<pre><code>void f ()\n</code></pre>\n\n<p>VS2013 replaces this with</p>\n\n<pre><code>void f()\n</code></pre>\n\n<p>That's not the code-standard in this specific project which means I have to go back and insert a space. There are other examples where I have to fight against VS.</p>\n\n<p>I don't want to change the spacing settings because</p>\n\n<ol>\n<li>I work in multiple projects with different code standards</li>\n<li>I don't believe in auto-formatting so I just want it to get out of my way</li>\n</ol>\n\n<p>I just want VS to not modify my code automatically.</p>\n\n<p>PS. I am not against that VS can format code but I want to invoke that manually</p>\n"
p145
sg18
VYou can turn off automatic C++ code formatting by going to the **Options**\u000adialog from the **Tools** menu, selecting the **Text Editor -> C/C++ ->\u000aFormatting -> General** page, and unchecking all the boxes there. You'll still\u000abe able to manually format when all of the auto-formatting settings are turned\u000aoff.\u000a\u000a
p146
sg20
I1438271873
sg21
I18298072
sg22
I01
sg23
I01
sg24
I18324386
sbsS'757418'
p147
(iQuestion
Question
p148
(dp149
g4
I01
sg5
I74
sg6
(lp150
Vc++
p151
aVvisual-studio
p152
aVmsbuild
p153
aVmsvcrt
p154
aVcrt
p155
asg13
VShould I compile with /MD or /MT?
p156
sg15
I46
sg16
S"<p>In Visual Studio, there's the compile flags /MD and /MT which let you choose which kind of C runtime library you want.</p>\n\n<p>I understand the difference in implementation, but I'm still not sure which one to use. What are the pros/cons?</p>\n\n<p>One advantage to /MD that I've heard, is that this allows someone to update the runtime, (like maybe patch a security problem) and my app will benefit from this update. Although to me, this almost seems like a non-feature: I don't want people changing my runtime without allowing me to test against the new version!</p>\n\n<p>Some things I am curious about:</p>\n\n<ul>\n<li>How would this affect build times? (presumably /MT is a little slower?)</li>\n<li>What are the other implications?</li>\n<li>Which one do most people use?</li>\n</ul>\n"
p157
sg68
I01
sg18
VBy dynamically linking with /MD,\u000a\u000a  * you are exposed to system updates (for good or ill), \u000a  * your executable can be smaller (since it doesn't have the library embedded in it), and \u000a  * I believe that at very least the code segment of a DLL is shared amongst all processes that are actively using it (reducing the total amount of RAM consumed).\u000a\u000aI've also found that in practice, when working with statically-linked 3rd-\u000aparty binary-only libraries that have been built with different runtime\u000aoptions, /MT in the main application tends to cause conflicts much more often\u000athan /MD (because you'll run into trouble if the C runtime is statically-\u000alinked multiple times, especially if they are different versions).\u000a\u000a
p158
sg20
I1433253368
sg21
I757418
sg23
I01
sg24
I757537
sbsS'225432'
p159
(iQuestion
Question
p160
(dp161
g4
I01
sg5
I39
sg6
(lp162
Vc++
p163
aVwindows
p164
aVvisual-studio
p165
aVvisual-studio-2005
p166
asg13
VExport all symbols when creating a DLL
p167
sg15
I30
sg16
S'<p>With VS2005, I want to create a DLL and automatically export all symbols without adding __declspec(dllexport) everywhere and without hand-creating .def files. Is threre a way to do this?</p>\n'
p168
sg18
VIt can be done...\u000a\u000aThe way we do it here is to use the /DEF option of the linker to pass a\u000a"module definition file" containing a list of our exports. I see form your\u000aquestion that you know about these files. However, we do not do it by hand.\u000aThe list of exports itself is created by the dumpbin /LINKERMEMBER command,\u000aand manipulating the output via a simple script to the format of a module\u000adefinition file.\u000a\u000aIt is a lot of work to setup, but it allows us to compile code created without\u000adllexport declarations for Unix on Windows.\u000a\u000a
p169
sg20
I1440856904
sg21
I225432
sg23
I01
sg24
I226017
sbsS'3506796'
p170
(iQuestion
Question
p171
(dp172
g4
I01
sg5
I48
sg6
(lp173
Vc#
p174
aVc++
p175
aVvisual-studio-2010
p176
aVvisual-studio
p177
aVpinvoke
p178
asg13
Vpinvokestackimbalance -- how can I fix this or turn it off?
p179
sg15
I80
sg16
S'<p>I just switched to vs2010 from vs2008.  Exact same solution, except now every single call to a C++ dll yields a \'pinvokestackimbalance\' exception.</p>\n\n<p>This exception does not get fired in 2008.  I have complete access to the C++ dll and to the calling application.  There does not appear to be any problem with the pinvoke, but this problem is making debugging other problems impossible; the IDE is stopping constantly to tell me about these things.</p>\n\n<p>For instance, here\'s the C# signature:</p>\n\n<pre><code>    [DllImport("ImageOperations.dll")]\n    static extern void FasterFunction(\n        [MarshalAs(UnmanagedType.LPArray)]ushort[] inImage, //IntPtr inImage, \n        [MarshalAs(UnmanagedType.LPArray)]byte[] outImage, //IntPtr outImage, \n        int inTotalSize, int inWindow, int inLevel);\n</code></pre>\n\n<p>Here\'s what it looks like on the C++ side:</p>\n\n<pre><code>#ifdef OPERATIONS_EXPORTS\n#define OPERATIONS_API __declspec(dllexport)\n#else\n#define OPERATIONS_API __declspec(dllimport)\n#endif\nextern "C" {\n\n\nOPERATIONS_API void __cdecl FasterFunction(unsigned short* inArray, \n                                       unsigned char* outRemappedImage,\n                                       int inTotalSize, \n                                       int inWindow, int inLevel);\n\n}\n</code></pre>\n\n<p>What\'s different between vs2010 and vs2008 that would cause these exceptions to get thrown?  Should I be adding a different set of parameters to the DllImport directive?</p>\n'
p180
sg68
I01
sg18
VFirst, understand that the code is wrong (and always has been). The\u000a"pInvokeStackImbalance" is not an exception per se, but a managed debugging\u000aassistant. It was off by default in VS2008, but a lot of people did not turn\u000ait on, so it's on by default in VS2010. The MDA does not run in Release mode,\u000aso it won't trigger if you build for release. In your case, the calling\u000aconvention is incorrect. DllImport defaults to CallingConvention.WinApi, which\u000ais identical to CallingConvention.StdCall for x86 desktop code. It should be\u000aCallingConvention.Cdecl.\u000a\u000a
p181
sg20
I1462767823
sg21
I3506796
sg23
I01
sg24
I3506938
sbsS'15453629'
p182
(iQuestion
Question
p183
(dp184
g4
I01
sg5
I28
sg6
(lp185
Vc++
p186
aVvisual-studio
p187
aVdll
p188
aVvisual-studio-2012
p189
aVvisual-c++-runtime
p190
asg13
VUse Visual Studio 2012 and compile with older platform toolset?
p191
sg15
I22
sg16
S'<p><strong>The problem</strong></p>\n\n<p>I\'m using Visual Studio 2012 to develop C++ DLLs. On some machines these DLLs can not be loaded, because the platform toolset, which is set to "v110" is missing.</p>\n\n<p>I have tried to install older c++ runtimes. They didn\'t install because "a newer version is already installed". I also installed the current Windows SDK, but there are still no other items to choose from than v110.</p>\n\n<p><strong>Question</strong></p>\n\n<p>How can I compile my C++ DLL with an older version of the C++ runtime so it will run on non-developer machines?</p>\n\n<p><img src="http://i.stack.imgur.com/tKMwH.png" alt="Platform toolset is v110"></p>\n'
p192
sg18
VAccording to this page on MSDN, you need to have the corresponding version of\u000aVisual Studio (2008 or 2010), or the relevant Windows SDK for the "Platform\u000aToolset" drop down to list those versions: > To change the target platform\u000atoolset, you must have the associated version of Visual Studio or the Windows\u000aPlatform SDK installed. You also seem to be a little bit confused between\u000a"Platform Toolset", which controls which compiler/linker/etc. is used to\u000a_build_ your application, and "Visual C++ Redistributable", which is needed to\u000a_run_ your application. You can't install a "Platform Toolset" on a user's PC,\u000aand nor will you make one available by installing a particular "Visual C++\u000aRedistributable" on your development PC. Also, as far as I know, the Visual\u000aC++ Redistributable doesn't include the MFC runtimes. They're available as a\u000aseparate MSI merge module (MSM).\u000a\u000a
p193
sg20
I1472127429
sg21
I15453629
sg22
I01
sg23
I01
sg24
I15454139
sbsS'531941'
p194
(iQuestion
Question
p195
(dp196
g4
I01
sg5
I64
sg6
(lp197
Vc++
p198
aVvisual-studio
p199
aVunit-testing
p200
aVvisual-studio-2005
p201
aVgoogletest
p202
asg13
VHow to setup Google C++ Testing Framework (gtest) on Visual Studio 2005
p203
sg15
I35
sg16
S'<p>It is not documented on the web site and people seems having problem setting up the framework. Can someone please show step by step introduction to a sample project setup.</p>\n'
p204
sg18
VWhat Arlaharen said was basically right, except he left out the part which\u000aexplains your linker errors. First of all, you need to build your application\u000a_without_ the CRT as a runtime library. You should always do this anyways, as\u000ait really simplifies distribution of your application. If you don't do this,\u000athen all of your users need the Visual C++ Runtime Library installed, and\u000athose who do not will complain about mysterious DLL's missing on their\u000asystem... for the extra few hundred kilobytes that it costs to link in the CRT\u000astatically, you save yourself a lot of headache later in support (trust me on\u000athis one -- I've learned it the hard way!).\u000a\u000aAnyways, to do this, you go to the target's properties -> C/C++ -> Code\u000aGeneration -> Runtime Library, and it needs to be set as "Multi-Threaded" for\u000ayour Release build and "Multi-Threaded Debug" for your Debug build.\u000a\u000aSince the gtest library is built in the same way, you need to make sure you\u000aare linking against the correct version of _it_, or else the linker will pull\u000ain another copy of the runtime library, which is the error you saw (btw, this\u000ashouldn't make a difference if you are using MFC or not). You need to build\u000agtest as **both a Debug and Release** mode and keep both copies. You then link\u000aagainst gtest.lib/gtest_main.lib in your Release build and\u000agtestd.lib/gtest_maind.lib in your Debug build.\u000a\u000aAlso, you need to make sure that your application points to the directory\u000awhere the gtest header files are stored (in properties -> C/C++ -> General ->\u000aAdditional Include Directories), but if you got to the linker error, I assume\u000athat you already managed to get this part correct, or else you'd have a lot\u000amore compiler errors to deal with first.\u000a\u000a
p205
sg20
I1441315991
sg21
I531941
sg23
I01
sg24
I533372
sbsS'3566018'
p206
(iQuestion
Question
p207
(dp208
g4
I01
sg5
I101
sg6
(lp209
Vc++
p210
aVvisual-studio
p211
aVwinapi
p212
aVvisual-c++
p213
asg13
VCannot open include file 'afxres.h' in VC2010 Express
p214
sg15
I150
sg16
S'<p>I\'m trying to compile an old project using VS express 2010 but I get this error:</p>\n\n<blockquote>\n  <p>fatal error RC1015: cannot open include file \'afxres.h\'. from this code</p>\n</blockquote>\n\n<pre><code>/////////////////////////////////////////////////////////////////////////////\n//\n// Generated from the TEXTINCLUDE 2 resource.\n//\n#include "afxres.h"\n</code></pre>\n\n<p>I have installed Windows SDK already, but without any success.</p>\n\n<p>thanks!</p>\n'
p215
sg18
VThis header is a part of the MFC Library. VS Express edition doesn't contain\u000aMFC. If your project doesn't use MFC you can safely replace afxres.h with\u000awindows.h in your terrain2.rc.\u000a\u000a
p216
sg20
I1467638466
sg21
I3566018
sg22
I01
sg23
I01
sg24
I3566074
sbsS'2538149'
p217
(iQuestion
Question
p218
(dp219
g4
I01
sg5
I61
sg6
(lp220
Vc++
p221
aVvisual-studio-2010
p222
aVvisual-studio
p223
aVversion-control
p224
aVignore
p225
asg13
VWhat should be contained in a global source code control ignore pattern for Visual Studio 2010?
p226
sg15
I72
sg16
S"<p>After installing and using Visual Studio 2010, I'm seeing some newer file types (at least with C++ projects ... don't know about the other types) as compared to 2008.  e.g. .sdf, .opensdf, which I guess are the replacement for ncb files with Intellisense info stored in SQL Server Compact files?  I also notice .log files are generated, which appear to be build logs.</p>\n\n<p>Given this, what's safe to add to my global ignore pattern?  Off the bat, I'd assume .sdf, .opensdf, but what else?</p>\n"
p227
sg18
VFor C++ projects, you should be fine ignoring the following files: * *.sdf and\u000a*.opensdf (temporary file opened only while .vcxproj/.sln is loaded to Visual\u000aStudio IDE) * *.suo * *.vcxproj.user * ipch folder, if your project uses Pre-\u000acompiled Headers (PCH); it is a storage for Intellisense compiler which can\u000anow utilise PCH for better performance For C# projects, it's also a good idea\u000ato ignore bin and obj directories, and *.suo too.\u000a\u000a
p228
sg20
I1474393957
sg21
I2538149
sg22
I01
sg23
I01
sg24
I2539084
sbsS'37398'
p229
(iQuestion
Question
p230
(dp231
g4
I01
sg5
I62
sg6
(lp232
Vc++
p233
aVvisual-studio
p234
aVlinker
p235
asg13
VHow do I make a fully statically linked .exe with Visual Studio Express 2005?
p236
sg15
I72
sg16
S'<p>My current preferred C++ environment is the free and largely excellent Microsoft Visual Studio 2005 Express edition. From time to time I have sent release .exe files to other people with pleasing results. However recently I made the disturbing discovery that the pleasing results were based on more luck that I would like. Attempting to run one of these programs on an old (2001 vintage, not scrupulously updated) XP box gave me nothing but a nasty "System cannot run x.exe" (or similar) message.</p>\n\n<p>Some googling revealed that with this toolset, even specifying static linking results in a simple hello-world.exe actually relying on extra .dll files (msvcm80.dll etc.). An incredibly elaborate version scheming system (manifest files anyone?) then will not let the .exe run without exactly the right .dll versions. I don\'t want or need this stuff, I just want an old fashioned self contained .exe that does nothing but lowest common denominator Win32 operations and runs on any old win32 OS.</p>\n\n<p>Does anyone know if its possible to do what I want to do with my existing toolset ?</p>\n\n<p>Thank you.</p>\n'
p237
sg18
VFor the C-runtime go to the project settings, choose C/C++ then 'Code\u000aGeneration'. Change the 'runtime library' setting to 'multithreaded' instead\u000aof 'multithreaded dll'.\u000a\u000aIf you are using any other libraries you may need to tell the linker to ignore\u000athe dynamically linked CRT explicitly.\u000a\u000a
p238
sg20
I1453670863
sg21
I37398
sg22
I01
sg23
I01
sg24
I37402
sbsS'312312'
p239
(iQuestion
Question
p240
(dp241
g4
I01
sg5
I44
sg6
(lp242
Vc++
p243
aVvisual-studio
p244
aVvisual-studio-2005
p245
asg13
VWhat are some reasons a Release build would run differently than a Debug build
p246
sg15
I104
sg16
S"<p>I have a Visual Studio 2005 C++ program that runs differently in Release mode than it does in Debug mode.  In release mode, there's an (apparent) intermittent crash occurring.  In debug mode, it doesn't crash.  What are some reasons that a Release build would work differently than a Debug build?</p>\n\n<p>It's also worth mentioning my program is fairly complex and uses several 3rd party libraries for XML processing, message brokering, etc...</p>\n\n<p>Thanks in advance!</p>\n"
p247
sg18
V**Surviving the Release Version** gives a good overview. Things I have encountered - most are already mentioned **Variable initialization** by far the most common. In Visual Studio, debug builds explicitely initialize allocated memory to given values, see e.g. Memory Values here. These values are usually easy to spot, cause an out of bounds error when used as an index or an access violation when used as a pointer. An uninitialized boolean is true, however, and may cause uninitialized memory bugs going undetected for years. In Release builds where memory isn't explicitely initialized it just keeps the contents that it had before. This leads to "funny values" and "random" crashes, but as often to deterministic crashes that require an apparently unrelated command to be executed before the command that actually crashes. This is caused by the first command "setting up" the memory location with specific values, and when the memory locations are recycled the second command sees them as initializations. That's more common with uninitialized stack variables than heap, but the latter has happened to me, too. Raw memory initialization can also be different in a release build whether you start from visual studio (debugger attached) vs. starting from explorer. That makes the "nicest" kind of release build bugs that never appear under the debugger. **Valid Optimizations** come second in my exeprience. The C++ standard allows lots of optimizations to take place which may be surprising but are entirely valid e.g. when two pointers alias the same memory location, order of initialization is not considered, or multiple threads modify the same memory locations, and you expect a certain order in which thread B sees the changes made by thread A. Often, the compiler is blamed for these. Not so fast, young yedi! - see below **Timing** Release builds don't just "run faster", for a variety of reasons (optimizations, logging functions providing a thread sync point, debug code like asserts not executed etc.) also the relative timing between operations change dramatically. Most common problem uncovered by that is race conditions, but also deadlocks and simple "different order" execution of message/timer/event-based code. Even though they are timing problems, they _can_ be surprisingly stable across builds and platforms, with reproductions that "work always, except on PC 23". **Guard Bytes**. Debug builds often put (more) guard bytes around selected instances and allocations, to protect against index overflows and sometimes underflows. In the rare cases where the code relies on offsets or sizes, e.g. serializing raw structures, they are different. **Other code differences** Some instructions - e.g asserts - evaluate to nothing in release builds. Sometimes they have different side effects. This is prevalent with macro trickery, as in the classic (warning: multiple errors) #ifdef DEBUG #define Log(x) cout << #x << x << "\u005cn"; #else #define Log(x) #endif if (foo) Log(x) if (bar) Run(); Which, in a release build, evaluates to _if (foo && bar)_ This type of error is very very rare with normal C/C++ code, and macros that are correctly written. **Compiler Bugs** This really never ever happens. Well - it does, but you are for the most part of your career better off assuming it does not. In a decade of working with VC6, I found one where I am still convinced this is an unfixed compiler bug, compared to dozens of patterns (maybe even hundreds of instances) with insufficient understanding of the scripture (a.k.a. the standard). \u000a\u000a
p248
sg20
I1468815731
sg21
I312312
sg23
I01
sg24
I312352
sbsS'126751'
p249
(iQuestion
Question
p250
(dp251
g4
I01
sg5
I31
sg6
(lp252
Vc++
p253
aVvisual-studio
p254
aVvisual-studio-2005
p255
aVcompiler-errors
p256
aVnightly-build
p257
asg13
VCompilation fails randomly: "cannot open program database"
p258
sg15
I20
sg16
S"<p>During a long compilation with Visual Studio 2005 (version 8.0.50727.762), I sometimes get the following error in several files in some project:  </p>\n\n<pre><code>fatal error C1033: cannot open program database 'v:\\temp\\apprtctest\\win32\\release\\vc80.pdb'\n</code></pre>\n\n<p>(The file mentioned is either <code>vc80.pdb</code> or <code>vc80.idb</code> in the project's temp dir.)</p>\n\n<p>The next build of the same project succeeds. There is no other Visual Studio open that might access the same files.</p>\n\n<p>This is a serious problem because it makes nightly compilation impossible.</p>\n"
p259
sg18
VIt is possible that an antivirus or a similar program is touching the pdb file\u000aon write - an antivirus is the most likely suspect in this scenario. I'm\u000aafraid that I can only give you some general pointers, based on my past\u000aexperience in setting nightly builds in our shop. Some of these may sound\u000atrivial, but I'm including them for the sake of completion.\u000a\u000a  * First and foremost: make sure you start up with a clean slate. That is, force-delete the output directory of the build before you start your nightly.\u000a  * If you have an antivirus, antispyware or other such programs on your nightly machine, consider removing them. If that's not an option, add your obj folder to the exclusion list of the program.\u000a  * (optional) Consider using tools such as VCBuild or MSBuild as part of your nightly. I think it's better to use MSBuild if you're on a multicore machine. We use IncrediBuild for nightlies and MSBuild for releases, and never encountered the problem you describe.\u000a\u000aIf nothing else works, you can schedule a watchdog script a few hours after\u000athe build starts and check its status; if the build fails, the watchdog should\u000arestart it. This is an ugly hack, but it's better than nothing.\u000a\u000a
p260
sg20
I1461907899
sg21
I126751
sg23
I01
sg24
I127108
sbsS'15110580'
p261
(iQuestion
Question
p262
(dp263
g4
I01
sg5
I26
sg6
(lp264
Vc++
p265
aVvisual-studio
p266
aVlinker-error
p267
asg13
VPenalty of the MSVS compiler flag /bigobj
p268
sg15
I24
sg16
S'<p>The basic Google search <a href="https://www.google.com/search?q=bigobj+issue">bigobj issue</a> shows that a lot of people are experiencing the <a href="http://msdn.microsoft.com/en-us/library/8578y171.aspx">Fatal Error C1128</a>: "<em>number of sections exceeded object file format limit : compile with /bigobj</em>". The error has more chance to occur if one heavily uses a library of C++ templates, like <a href="http://www.boost.org">Boost libraries</a> or <a href="http://www.cgal.org/">CGAL libraries</a>.</p>\n\n<p>That error is strange, because it gives the solution to itself: set the <a href="http://msdn.microsoft.com/en-us/library/ms173499.aspx">compiler flag <code>/bigobj</code></a>!</p>\n\n<p>So here is my question: why is not that flag set by default? There must be a penalty of using that flag, otherwise it would be set by default. That penalty is not documented in MSDN. Does anybody have a clue?</p>\n\n<p>I ask the question because I wonder if the configuration system of <a href="http://www.cgal.org">CGAL</a> should not set <code>/bigobj</code> by default.</p>\n'
p269
sg18
VThe documentation does mention an important drawback to /bigobj: > Linkers\u000athat shipped prior to Visual C++ 2005 cannot read .obj files that were\u000aproduced with /bigobj. So, setting this option by default would restrict the\u000anumber of linkers that can consume the resulting object files. Better to\u000aactivate it on a need-to basis.\u000a\u000a
p270
sg20
I1436727476
sg21
I15110580
sg23
I01
sg24
I15110915
sbsS'31351372'
p271
(iQuestion
Question
p272
(dp273
g4
I01
sg5
I32
sg6
(lp274
Vc++
p275
aVvisual-studio
p276
aVvisual-studio-2015
p277
aVclang++
p278
asg13
VHow to compile C++ for Windows with clang in Visual Studio 2015
p279
sg15
I22
sg16
S'<p>As far as I understand, Visual Studio 2015 is shipped with clang. First I though this was only for Android and iOS apps, but according to <a href="http://blogs.msdn.com/b/vcblog/archive/2015/05/01/bringing-clang-to-windows.aspx">this article</a> it should also be possible to use the clang++ frontend for Windows programs. However, I can\'t find the according option.</p>\n\n<p>So could you please explain to me, how I can change the used compiler to clang in a c++ project (in VS2015 RC Community Edition).</p>\n'
p280
sg18
VStarting with VS2015 Update 1 you can install the "Clang with Microsoft\u000aCodeGen" template via the New Project window, browse to Installed -> Templates\u000a-> Visual C++ -> Cross Platform. You will then be able to choose the Clang 3.7\u000awith Microsoft CodeGen v140_clang_3_7 Platform Toolset in the properties page\u000aof any Windows C++ project. Clang has a completely different set of command-\u000aline options which it recognizes, so when using the v140_clang_3_7 toolset,\u000athe project properties must be using Clang-compatible options, which can be\u000arecognized as starting with - instead of /. For example, Debug Information\u000aFormat property set to "Full Debug Information (DWARF2) (-g2 -gdwarf-2)", and\u000aEnable C++ Exceptions property set to "Yes (-fexceptions)". There's more\u000ainformation in this blog post. ![screenshot of the new project\u000awindow](http://i.stack.imgur.com/elnEP.png)\u000a\u000a
p281
sg20
I1449620283
sg21
I31351372
sg23
I01
sg24
I34011385
sbsS'6883276'
p282
(iQuestion
Question
p283
(dp284
g4
I01
sg5
I50
sg6
(lp285
Vc++
p286
aVvisual-studio-2010
p287
aVvisual-studio
p288
aVcompilation
p289
asg13
VWhat is the difference between "Include Directories" and "Additional Include Directories"
p290
sg15
I27
sg16
S'<p>In configuration properties of my project, under the "VC++ directories" there is an entry for "Include Directories". But under "C/C++" option, there is another entry called "Additional Include Directories". Same thing happens with library directories.</p>\n\n<p>What are the difference between these two entries?</p>\n\n<p><img src="http://i.stack.imgur.com/58M2F.png" alt="enter image description here">\n<img src="http://i.stack.imgur.com/VH1UA.png" alt="enter image description here"></p>\n'
p291
sg18
VThis is awkwardness that got introduced in VS2010. The VC++ Directories\u000asettings used to be located in Tools + Options, Projects and Solutions, VC++\u000aDirectories. Global settings that applied to every project that was built on\u000athe machine. It is still there but points out that you should now change it in\u000ayour project settings. A side-effect of the build engine overhaul in VS2010,\u000aenabling building with msbuild. Removing the per-project settings would have\u000abeen logical but that would break too many existing projects. As such, it is\u000aprobably best to treat the VC++ Directories settings as the machine default.\u000aIt is automatically preset by the VS installer. Tinker with it only if you\u000aneed an unusual directory search order, putting the custom locations last.\u000aVery unusual to do so. It does work however. And it did get taken advantage of\u000aeventually. Empowering the Platform Toolset setting in VS2012 and up.\u000aDifferent compiler, different linker, different #include directories,\u000adifferent linker search path. Modified with just one setting, nice.\u000a\u000a
p292
sg20
I1444434416
sg21
I6883276
sg23
I01
sg24
I6883743
sbsS'621535'
p293
(iQuestion
Question
p294
(dp295
g4
I01
sg5
I21
sg6
(lp296
Vc++
p297
aVwindows
p298
aVvisual-studio
p299
aVdebugging
p300
asg13
VWhat are data breakpoints?
p301
sg15
I26
sg16
S"<p>I just came to know that there are <em>data</em> breakpoints. I have worked for the last 5 years in C++ using Visual Studio, and I have never used data breakpoints.</p>\n\n<p>Can someone throw some light on what data breakpoints are, when to use them and <em>how</em> to use them with VS?</p>\n\n<p>As per my understanding we can set a data breakpoint when we want to check for changes to a variable's value. In this case, we can set a data breakpoint with a condition on the variable value.</p>\n\n<p>Any other examples?</p>\n"
p302
sg18
S'<p>Definition:</p>\n\n<blockquote>\n  <p>Data breakpoints allow you to break\n  execution when the value stored at a\n  specified memory location changes.</p>\n</blockquote>\n\n<p>From MSDN: <a href="https://msdn.microsoft.com/en-us/library/350dyxd0(v=vs.100).aspx" rel="nofollow">How to: Set a Data Breakpoint</a>:</p>\n\n<p><strong>How to Set a Memory Change Breakpoint</strong></p>\n\n<ol>\n<li><p>From the Debug Menu, choose New Breakpoint and click New Data Breakpoint</p>\n\n<p>\xe2\x80\x94or\xe2\x80\x94</p>\n\n<p>in the Breakpoints window Menu, click the New dropdown and choose New Data Breakpoint.</p>\n\n<p>The New Breakpoint dialog box appears.</p></li>\n<li><p>In the Address box, enter a memory address or expression that evaluates to a memory address. For example, &amp;foo to break when the contents of variable foo change.</p></li>\n<li><p>In the Byte Count box, enter the number of bytes you want the debugger to watch. For example, if you enter 4, the debugger will watch the four bytes starting at &amp;foo and break if any of those bytes change value.</p></li>\n<li><p>Click OK.</p></li>\n</ol>\n'
p303
sS'parseFailed'
p304
I01
sg20
I1434493731
sg21
I621535
sg23
I01
sg24
I621537
sbsS'2629421'
p305
(iQuestion
Question
p306
(dp307
g4
I01
sg5
I316
sg6
(lp308
Vc++
p309
aVvisual-studio-2010
p310
aVvisual-studio
p311
aVboost
p312
asg13
VHow to use Boost in Visual Studio 2010
p313
sg15
I450
sg16
S'<p>What is a good step by step explanation on how to use Boost in an empty project in Visual Studio 2010.</p>\n'
p314
sg18
VWhile Nate's answer is pretty good already, I'm going to expand on it more\u000aspecifically for Visual Studio 2010 as requested, and include information on\u000acompiling in the various optional components which requires external\u000alibraries. If you are using headers only libraries, then all you need to do is\u000ato unarchive the boost download and set up the environment variables. The\u000ainstruction below set the environment variables for Visual Studio only, and\u000anot across the system as a whole. Note you only have to do it once. 1\u005c.\u000aUnarchive the latest version of boost (1.47.0 as of writing) into a directory\u000aof your choice (e.g. C:\u005cboost_1_47_0). 2\u005c. Create a new empty project in\u000aVisual Studio. 3\u005c. Open the Property Manager and expand one of the\u000aconfiguration for the platform of your choice. 4\u005c. Select & right click\u000aMicrosoft.Cpp..user, and select Properties to open the Property Page for edit.\u000a5\u005c. Select VC++ Directories on the left. 6\u005c. Edit the Include Directories\u000asection to include the path to your boost source files. 7\u005c. Repeat steps 3 - 6\u000afor different platform of your choice if needed. If you want to use the part\u000aof boost that require building, but none of the features that requires\u000aexternal dependencies, then building it is fairly simple. 1\u005c. Unarchive the\u000alatest version of boost (1.47.0 as of writing) into a directory of your choice\u000a(e.g. C:\u005cboost_1_47_0). 2\u005c. Start the Visual Studio Command Prompt for the\u000aplatform of your choice and navigate to where boost is. 3\u005c. Run: bootstrap.bat\u000ato build b2.exe (previously named bjam). 4\u005c. Run b2: * **Win32:** b2\u000a--toolset=msvc-10.0 --build-type=complete stage ; * **x64:** b2\u000a--toolset=msvc-10.0 --build-type=complete architecture=x86 address-model=64\u000astage Go for a walk / watch a movie or 2 / .... 8\u005c. Go through steps 2 - 6\u000afrom the set of instruction above to set the environment variables. 9\u005c. Edit\u000athe Library Directories section to include the path to your boost libraries\u000aoutput. (The default for the example and instructions above would be\u000aC:\u005cboost_1_47_0\u005cstage\u005clib. Rename and move the directory first if you want to\u000ahave x86 & x64 side by side (such as to \u005clib\u005cx86 & \u005clib\u005cx64). 10\u005c. Repeat\u000asteps 2 - 6 for different platform of your choice if needed. If you want the\u000aoptional components, then you have more work to do. These are: *\u000aBoost.IOStreams Bzip2 filters * Boost.IOStreams Zlib filters * Boost.MPI *\u000aBoost.Python * Boost.Regex ICU support Boost.IOStreams Bzip2 filters: 1\u005c.\u000aUnarchive the latest version of bzip2 library (1.0.6 as of writing) source\u000afiles into a directory of your choice (e.g. C:\u005cbzip2-1.0.6). 2\u005c. Follow the\u000asecond set of instructions above to build boost, but add in the option\u000a-sBZIP2_SOURCE="C:\u005cbzip2-1.0.6" when running b2 in step 5. Boost.IOStreams\u000aZlib filters 1\u005c. Unarchive the latest version of zlib library (1.2.5 as of\u000awriting) source files into a directory of your choice (e.g. C:\u005czlib-1.2.5).\u000a2\u005c. Follow the second set of instructions above to build boost, but add in the\u000aoption -sZLIB_SOURCE="C:\u005czlib-1.2.5" when running b2 in step 5. Boost.MPI 1\u005c.\u000aInstall a MPI distribution such as Microsoft Compute Cluster Pack. 2\u005c. Follow\u000asteps 1 - 3 from the second set of instructions above to build boost. 3\u005c. Edit\u000athe file project-config.jam in the directory that resulted from running\u000abootstrap. Add in a line that read using mpi ; (note the space before the\u000a';'). 4\u005c. Follow the rest of the steps from the second set of instructions\u000aabove to build boost. If auto-detection of the MPI installation fail, then\u000ayou'll need to look for and modify the appropriate build file to look for MPI\u000ain the right place. Boost.Python 1\u005c. Install a Python distribution such as\u000aActiveState's ActivePython. Make sure the Python installation is in your PATH.\u000a2\u005c. To completely built the 32-bits version of the library requires 32-bits\u000aPython, and similarly for the 64-bits version. If you have multiple versions\u000ainstalled for such reason, you'll need to tell b2 where to find specific\u000aversion and when to use which one. One way to do that would be to edit the\u000afile project-config.jam in the directory that resulted from running bootstrap.\u000aAdd in the following two lines adjusting as appropriate for your Python\u000ainstallation paths & versions (note the space before the ';'). using python :\u000a2.6 : C:\u005c\u005c\u005c\u005c\u005cPython\u005c\u005c\u005c\u005c\u005cPython26\u005c\u005c\u005c\u005c\u005cpython ; using python : 2.6 :\u000aC:\u005c\u005c\u005c\u005c\u005cPython\u005c\u005c\u005c\u005c\u005cPython26-x64\u005c\u005c\u005c\u005c\u005cpython : : : 64 ; Do note that such\u000aexplicit Python specification currently cause MPI build to fail. So you'll\u000aneed to do some separate building with and without specification to build\u000aeverything if you're building MPI as well. 3\u005c. Follow the second set of\u000ainstructions above to build boost. Boost.Regex ICU support 1\u005c. Unarchive the\u000alatest version of ICU4C library (4.8 as of writing) source file into a\u000adirectory of your choice (e.g. C:\u005cicu4c-4_8). 2\u005c. Open the Visual Studio\u000aSolution in \u005csource\u005callinone. 3\u005c. Build All for both debug & release\u000aconfiguration for the platform of your choice. There can be a problem building\u000arecent releases of ICU4C with Visual Studio 2010 when the output for both\u000adebug & release build are in the same directory (which is the default\u000abehaviour). A possible workaround is to do a Build All (of debug build say)\u000aand then do a Rebuild all in the 2nd configuration (e.g. release build). 4\u005c.\u000aIf building for x64, you'll need to be running x64 OS as there's post build\u000asteps that involves running some of the 64-bits application that it's\u000abuilding. 5\u005c. Optionally remove the source directory when you're done. 6\u005c.\u000aFollow the second set of instructions above to build boost, but add in the\u000aoption -sICU_PATH="C:\u005cicu4c-4_8" when running b2 in step 5.\u000a\u000a
p315
sg20
I1465713712
sg21
I2629421
sg23
I01
sg24
I2655683
sbsS'7575298'
p316
(iQuestion
Question
p317
(dp318
g4
I01
sg5
I35
sg6
(lp319
Vc++
p320
aVvisual-studio
p321
aVvisual-studio-2010
p322
asg13
VStatic library debug symbols
p323
sg15
I37
sg16
S"<p>In VS2010 there is an option to generate debug info for exes/dlls under <em>linker</em> but no such option under <em>librarian</em> for libs. Is the debug info embedded in the static library?</p>\n\n<p>There is an option in the <em>C/C++</em> properties for <em>Program Database File Name</em> for libs, exes, and dlls. By default it goes into my intermediate directory and is named the project name for libs, but is named <em>vc$(PlatformToolsetVersion).pdb</em> for exes/dlls. What's the pdb from this option and how does it differ from the pdb in the linker option?</p>\n\n<p>If I am supplying a library with libs and headers how do I supply debug symbols to a user of my library?</p>\n"
p324
sg18
VIf you use /ZI or /Zi (C/C++ -> General -> Debug Information Format), then the\u000avc$(PlatformToolsetVersion).pdb is created, which contains the debug info for\u000aall of the .obj files created. If alternately you use /Z7, the debug info will\u000abe embedded into the .obj file, and then embedded into the .lib. This is\u000aprobably the easiest way to distribute the debug info for a static library. I\u000awouldn't advise distributing a static library, however, since it's generally\u000atied to a specific version of the compiler.\u000a\u000a
p325
sg20
I1444752427
sg21
I7575298
sg23
I01
sg24
I7575545
sbsS'7702463'
p326
(iQuestion
Question
p327
(dp328
g4
I01
sg5
I31
sg6
(lp329
Vc++
p330
aVvisual-studio
p331
aVwindows-xp
p332
aVcompatibility
p333
aVvisual-studio-2012
p334
asg13
VWhat is special about the executables compiled with Visual Studio 11 which results in that the executables cannot be executed on Windows XP?
p335
sg15
I20
sg16
S'<p>I compile my C++ source code with Visual Studio 11 Developer Preview. I statically link to the runtime library.</p>\n\n<p>The resulting executable cannot be executed on Windows XP. When I try to execute it on Windows XP I get the error message "[Executable Path] is not a valid Win32 Application.".</p>\n\n<p><a href="https://connect.microsoft.com/VisualStudio/feedback/details/690617" rel="nofollow">According to Microsoft</a> Visual Studio 11 won\'t support Windows XP.</p>\n\n<p>How does it work that the resulting executable cannot be executed on Windows XP? Is there anything special within the executable?</p>\n'
p336
sg18
VThey seem to drop support for older systems in every new release of VS\u000a(NT4,2000,XP) Even if you don't use the CRT at all, they still force the PE\u000asubsystem version to high numbers. You can work around that by changing the\u000anumbers back to 5.0 in a post build step. Just changing those numbers should\u000aallow the exe to start on XP unless the new CRT is using WinAPI functions that\u000adon't exist on XP. The other alternative if you want to keep using VS11 is to\u000ause multi-targeting and older compilers...\u000a\u000a
p337
sg20
I1438371597
sg21
I7702463
sg23
I01
sg24
I7702846
sbsS'14573411'
p338
(iQuestion
Question
p339
(dp340
g4
I01
sg5
I35
sg6
(lp341
Vc++
p342
aVvisual-studio
p343
aVvisual-studio-2012
p344
asg13
VVisual Studio 2012 The project file "" has been renamed or is no longer in the solution
p345
sg15
I58
sg16
S'<p>I recently upgraded my IDE, but not my compiler from VS2010 to VS2012 and now I\'m having issues with one of my solutions. When I try to build it I get below message.</p>\n\n<blockquote>\n  <p>The project file has been renamed or is no longer in the solution </p>\n</blockquote>\n\n<p>And when I try to build the individual projects I get below message </p>\n\n<blockquote>\n  <p>A build is already in progress</p>\n</blockquote>\n\n<p>I\'ve tried removing and re-adding all the projects, but that doesn\'t help. I even created a brand new solution with all the same projects, but when I tried to build I got the same errors as with the original solution. </p>\n\n<p>I\'ve read that lot of people have similar problems to this, but none of their solutions have helped me so far.</p>\n\n<p>One suggestion was to see if any projects had any missing reference but I\'m not entirely sure how to go about doing that.</p>\n\n<p>I tried removing the references and re-adding them but every time I tried to re-add them I got the same error "The project file \'\' has been renamed or is no longer in the solution"</p>\n\n<p>Any help or suggestions would be awesome! </p>\n'
p346
sg18
VI had the same problem, and solved it by making sure that every project\u000areferenced by other projects were included in the solution. Right-click on the\u000afirst project, choose References... and make sure every project listed under\u000aReferences are included. Go to the next and do the same. That solved my\u000aproblem with "The Project file '' has been renamed or is no longer in the\u000asolution". Not sure about the problem with "A build is already in progress".\u000a\u000a
p347
sg20
I1431025972
sg21
I14573411
sg23
I01
sg24
I14722733
sbsS'1333527'
p348
(iQuestion
Question
p349
(dp350
g4
I01
sg5
I53
sg6
(lp351
Vc++
p352
aVvisual-studio
p353
aVwinapi
p354
aVvisual-studio-2005
p355
aVconsole
p356
asg13
VHow do I print to the debug output window in a Win32 app?
p357
sg15
I84
sg16
S"<p>I've got a win32 project that I've loaded into Visual Studio 2005. I'd like to be able to print things to the Visual Studio output window, but I can't for the life of me work out how. I've tried 'printf' and 'cout &lt;&lt;' but my messages stay stubbornly unprinted.</p>\n\n<p>Is there some sort of special way to print to the Visual Studio output window?</p>\n"
p358
sg18
VYou can use OutputDebugString. OutputDebugString is a macro that depending on\u000ayour build options either maps to OutputDebugStringA(char const*) or\u000aOutputDebugStringW(wchar_t const*). In the later case you will have to supply\u000aa wide character string to the function. To create a wide character literal\u000ayou can use the L prefix: OutputDebugStringW(L"My output string."); Normally\u000ayou will use the macro version together with the _T macro like this:\u000aOutputDebugString(_T("My output string.")); If you project is configured to\u000abuild for UNICODE it will expand into: OutputDebugStringW(L"My output\u000astring."); If you are not building for UNICODE it will expand into:\u000aOutputDebugStringA("My output string.");\u000a\u000a
p359
sg20
I1475444628
sg21
I1333527
sg22
I01
sg23
I01
sg24
I1333542
sbsS'2936757'
p360
(iQuestion
Question
p361
(dp362
g4
I01
sg5
I52
sg6
(lp363
Vc++
p364
aVvisual-studio-2010
p365
aVvisual-studio
p366
aVc++11
p367
asg13
VWhat C++11 features does Visual Studio 2010 support?
p368
sg15
I56
sg16
S'<p>There is <a href="http://gcc.gnu.org/projects/cxx0x.html">a list</a> for GCC; is there a similar list for Visual Studio 2010?</p>\n'
p369
sg18
VThere is also a list for Visual C++ 2010 (that article describes the core\u000alanguage features that have been implemented; the PDF linked from the article\u000adescribes the library features that have been implemented). **Edit:** I've\u000ajust come across an awesome list: the Apache C++ Standard Library wiki has **a\u000atable listing the C++11 core language features** and which C++ compilers\u000asupport each of them.\u000a\u000a
p370
sg20
I1467877530
sg21
I2936757
sg23
I01
sg24
I2936759
sbsS'10599940'
p371
(iQuestion
Question
p372
(dp373
g4
I01
sg5
I60
sg6
(lp374
Vc++
p375
aVvisual-studio
p376
aVvisual-c++
p377
asg13
Vmodule unsafe for SAFESEH image C++
p378
sg15
I40
sg16
S'<p>I am using Microsoft Visual Studio 2011 Professional Beta</p>\n\n<p>I am trying to run the OpenCV C++ files (<a href="http://opencv.willowgarage.com/wiki/Welcome">http://opencv.willowgarage.com/wiki/Welcome</a>) that I have compiled using cMake &amp; the Visual Studio Complier.</p>\n\n<p>However when I go to debug the project I get 600+ errors most of them being:</p>\n\n<blockquote>\n  <p>error LNK2026: module unsafe for SAFESEH image.</p>\n</blockquote>\n\n<p>Apparently these files are in the opencv_ffmpeg project but I couldn\'t find them, I have had a look at the safeseh Safe Exception Handlers page on the Microsoft help page but I couldn\'t find any definitive answers.</p>\n\n<p>I was wondering if anyone else has had this problem and if they managed to fix it.</p>\n'
p379
sg18
S"<p>From the comments:</p>\n\n<blockquote>\n  <p>This happens when you link an .obj or .lib that contains code created by an earlier version of the compiler. Which of course would be common if you downloaded a binary for opencv_ffmpeg instead of the source. You can turn the linker option off but then you'll still have a CRT version incompatibility that can byte. Rebuild the library from source. \xe2\x80\x93\xc2\xa0Hans Passant May 15 at 13:01\n  \xc2\xa0<br>\n  \xc2\xa0<br>\n  Thanks for the help, it worked \xe2\x80\x93\xc2\xa0Aaron Thompson May 17 at 14:50</p>\n</blockquote>\n"
p380
sg304
I01
sg20
I1432522351
sg21
I10599940
sg23
I01
sg24
I12980627
sbsS'7582394'
p381
(iQuestion
Question
p382
(dp383
g4
I01
sg5
I38
sg6
(lp384
Vc++
p385
ag87
aVvisual-studio
p386
aVstrdup
p387
asg13
Vstrdup or _strdup?
p388
sg15
I23
sg16
S"<p>When I use <code>strdup</code> in Microsoft Visual C++, it warns me:</p>\n\n<blockquote>\n  <p>warning C4996: 'strdup': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details.</p>\n</blockquote>\n\n<p>Thus it seems <code>_strdup</code> is correct.</p>\n\n<p>But when I use <code>_strdup</code> in GCC (Fedora Linux OS), the compiler shows an error:</p>\n\n<blockquote>\n  <p>error: \xe2\x80\x98_strdup\xe2\x80\x99 was not declared in this scope</p>\n</blockquote>\n\n<p>With GCC and Linux, compiler does not show any error for <code>strdup</code>.</p>\n\n<p>Which is correct - <code>strdup</code> or <code>_strdup</code>?</p>\n\n<p>Note: I include <code>&lt;string.h&gt;</code> in my code.</p>\n"
p389
sg18
Vstrdup is not a standard C++ function. but it is apparently a Posix function,\u000aand anyway it's a _well known function_ which has been there since K&R; C. so\u000aif you absolutely must use it, do not fret about any possible name collision,\u000aand just write strdup for maximum portability.\u000a\u000a
p390
sg20
I1476274152
sg21
I7582394
sg23
I01
sg24
I7582528
sbsS'146381'
p391
(iQuestion
Question
p392
(dp393
g4
I01
sg5
I92
sg6
(lp394
Vc++
p395
aVvisual-studio
p396
aVvisual-c++
p397
aVc++11
p398
aVc99
p399
asg13
VVisual Studio support for new C / C++ standards?
p400
sg15
I93
sg16
S'<p>I keep reading about C99 and C++11 and all these totally sweet things that are getting added to the language standard that might be nice to use someday. However, we currently languish in the land of writing C++ in Visual Studio.</p>\n\n<p>Will any of the new stuff in the standard ever get added to visual studio, or is Microsoft more interested in adding new C# variants to do that?</p>\n\n<p>Edit: In addition to the accepted answer, I found the Visual C++ team blog:</p>\n\n<p><a href="http://blogs.msdn.com/vcblog/">http://blogs.msdn.com/vcblog/</a></p>\n\n<p>And specifically, this post in it:</p>\n\n<p><a href="http://blogs.msdn.com/vcblog/archive/2008/02/22/tr1-slide-decks.aspx">http://blogs.msdn.com/vcblog/archive/2008/02/22/tr1-slide-decks.aspx</a></p>\n\n<p>Very useful. Thanks!</p>\n'
p401
sg18
S'<p>MS has a series of public replies to this, most of them blaming their users. Like this one:</p>\n\n<p><a href="http://blogs.msdn.com/vcblog/archive/2007/11/05/iso-c-standard-update.aspx">http://blogs.msdn.com/vcblog/archive/2007/11/05/iso-c-standard-update.aspx</a></p>\n\n<blockquote>\n  <p>Now, the Visual C++ compiler team receives the occasionally question as to why we haven\xe2\x80\x99t implemented C99.  It\xe2\x80\x99s really based on interest from our users.  Where we\xe2\x80\x99ve received many requests for certain C99 features, we\xe2\x80\x99ve tried to implement them (or analogues).  A couple examples are variadic macros, <code>long long</code>, <code>__pragma</code>, <code>__FUNCTION__</code>, and <code>__restrict</code>.  If there are other C99 features that you\xe2\x80\x99d find useful in your work, let us know!  We don\xe2\x80\x99t hear much from our C users, so speak up and make yourselves heard</p>\n</blockquote>\n\n<p><a href="http://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=345360">http://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=345360</a></p>\n\n<blockquote>\n  <p>Hi: unfortunately the overwhelming feadback we get from the majority of our users is that they would prefer that we focus on C++-0x instead of on C-99. We have "cherry-picked" certain popular C-99 features (variadic macros, <code>long long</code>) but beyond this we are unlikely to do much more in the C-99 space (at least in the short-term).</p>\n  \n  <p>Jonathan Caves</p>\n  \n  <p>Visual C++ Compiler Team.</p>\n</blockquote>\n\n<p>This is a pretty sad state of affairs, but also makes sense if you suspect MS wants to lock users in: it makes it very hard to port modern gcc-based code into MSVC, which at least I find extremely painful. </p>\n\n<p>A workaround exists, though:  Note that Intel is much more enlightened on this. the Intel C compiler can handle C99 code and even has the same flags as gcc, making it much easier to port code between platforms.   Also, the Intel compiler works in visual studio.  So by scrapping MS COMPILER you can still use the MS IDE that you seem to think has some kind of value, and use C99 to your hearts content. </p>\n\n<p>A more sensible approach is honestly to move over to Intel CC or gcc, and use Eclipse for your programming environment.  Portability of code across Windows-Linux-Solaris-AIX-etc is usually important in my experience, and that is not at all supported by MS tools, unfortunately.</p>\n'
p402
sg304
I01
sg20
I1432837956
sg21
I146381
sg23
I01
sg24
I146419
sbsS'3150'
p403
(iQuestion
Question
p404
(dp405
g4
I01
sg5
I76
sg6
(lp406
Vc++
p407
aVvisual-studio
p408
aVunit-testing
p409
aVtesting
p410
asg13
VHow to set up unit testing for Visual Studio C++
p411
sg15
I53
sg16
S"<p>I'm having trouble figuring out how to get the testing framework set up and usable in Visual Studio 2008 for C++ presumably with the built-in unit testing suite.</p>\n\n<p>Any links or tutorials would be appreciated.</p>\n"
p412
sg18
VThis page may help, it reviews quite a few C++ unit test frameworks: * CppUnit\u000a* Boost.Test * CppUnitLite * NanoCppUnit * Unit++ * CxxTest Check out\u000a**_CPPUnitLite_** or **_CPPUnitLite2_**. _CPPUnitLite_ was created by Michael\u000aFeathers, who originally ported Java's JUnit to C++ as CPPUnit (CPPUnit tries\u000amimic the development model of JUnit - but C++ lacks Java's features [e.g.\u000areflection] to make it easy to use). CPPUnitLite attempts to make a true\u000aC++-style testing framework, not a Java one ported to C++. (I'm paraphrasing\u000afrom Feather's Working Effectively with Legacy Code book). _CPPUnitLite2_\u000aseems to be another rewrite, with more features and bug fixes. I also just\u000astumbled across **_UnitTest++_** which includes stuff from CPPUnitLite2 and\u000asome other framework. Microsoft has released **_WinUnit_** (via MSDN\u000amagazine). The download link for the code seems broken, but here is a link\u000afound in the comments here. *** Update: WinUnit Homepage ***\u000a\u000a
p413
sg20
I1470377917
sg21
I3150
sg23
I01
sg24
I35963
sbsS'1826901'
p414
(iQuestion
Question
p415
(dp416
g4
I01
sg5
I120
sg6
(lp417
Vc++
p418
aVvisual-studio-2010
p419
aVvisual-studio
p420
aVversion-control
p421
aVvisual-c++-2010
p422
asg13
VShould I add .vcxproj.filter files to source control?
p423
sg15
I42
sg16
S"<p>While evaluating Visual Studio 2010 Beta 2, I see that in the converted directory, my <strong>vcproj</strong> files became <strong>vcxproj</strong> files. There are also <strong>vcxproj.filter</strong> files alongside each project which appear to contain a description of the folder structure (\\Source Files, \\Header Files, etc.).</p>\n\n<p>Do you think these filter files should be kept per-user, or should they be shared across the whole dev group and checked into SCC?</p>\n\n<p>My current thinking is to check them in, but I wonder if there are any reasons not to do that, or perhaps good reasons why I should definitely check them in.  </p>\n\n<p>The obvious benefit is that the folder structures will match if I'm looking at someone else's machine, but maybe they'd like to reorganize things logically?</p>\n"
p424
sg18
VPrevious versions of Visual Studio (at least versions 6.0 and 2008) store that\u000ainformation in their own project file (.dsp and .vcproj files respectively),\u000awhich of course is good to add to SCC. I cannot think of any reason to not\u000ainclude this .filter files in SCC\u000a\u000a
p425
sg20
I1448285405
sg21
I1826901
sg23
I01
sg24
I1834333
sbsS'601268'
p426
(iQuestion
Question
p427
(dp428
g4
I01
sg5
I78
sg6
(lp429
Vc++
p430
aVvisual-studio
p431
aVprojects-and-solutions
p432
asg13
Vvisual c++: #include files from other projects in the same solution
p433
sg15
I134
sg16
S'<p>I am working on a game using Visual C++. I have some components in separate projects, and have set the project dependencies. How do I #include a header file from a different project? I have no idea how to use classes from one project in another.</p>\n'
p434
sg18
V## Settings for compiler\u000a\u000aIn the project where you want to #include the header file from _another_\u000aproject, you will need to add the path of the header file into the\u000a**Additional Include Directories** section in the project configuration.\u000a\u000aTo access the project configuration:\u000a\u000a  1. Right-click on the project, and select Properties.\u000a  2. Select Configuration Properties->C/C++->General.\u000a  3. Set the path under Additional Include Directories.\u000a\u000a## How to include\u000a\u000aTo **include the header file**, simply write the following in your code:\u000a\u000a    \u000a    \u000a    #include "filename.h"\u000a    \u000a\u000aNote that you don't need to specify the path here, because you include the\u000adirectory in the Additional Include Directories already, so Visual Studio will\u000aknow where to look for it.\u000a\u000aIf you don't want to add every header file location in the project settings,\u000ayou could just include a directory up to a point, and then #include relative\u000ato that point:\u000a\u000a    \u000a    \u000a    // In project settings\u000a    Additional Include Directories    ..\u005c..\u005clibroot\u000a    \u000a    // In code\u000a    #include "lib1/lib1.h"    // path is relative to libroot\u000a    #include "lib2/lib2.h"    // path is relative to libroot\u000a    \u000a\u000a## Setting for linker\u000a\u000aIf using static libraries (i.e. .lib file), you will also need to add the\u000alibrary to the linker input, so that at linkage time the symbols can be linked\u000aagainst (otherwise you'll get an unresolved symbol):\u000a\u000a  1. Right-click on the project, and select Properties.\u000a  2. Select Configuration Properties->Linker->Input\u000a  3. Enter the library under Additional Dependencies.\u000a\u000a
p435
sg20
I1435547290
sg21
I601268
sg23
I01
sg24
I601285
sbsS'4953843'
p436
(iQuestion
Question
p437
(dp438
g4
I01
sg5
I23
sg6
(lp439
Vc++
p440
aVvisual-studio
p441
aVvisual-studio-2010
p442
aVvisual-c++
p443
aVdll
p444
asg13
VWhy can't Visual Studio find my DLL?
p445
sg15
I33
sg16
S"<p>In Visual Studio 2010, under <code>VC++ Directories &gt; Executable Directories</code>, I have specified the path to <code>glew32d.dll</code>. However, when I run the executable, it still complains.</p>\n\n<p>On the other hand, if I copy the DLL into the local folder and run the executable then, it doesn't complain.</p>\n\n<p>Can someone please tell me how to fix this? Also, why is Visual Studio not recognizing that path?</p>\n\n<p><strong>Update</strong>\nScenario: I currently use a template project which I use as a starter code for a lot of my projects. This template depends on glew32d.dll. I usually store all dependent dlls in a common bin folder. I was hoping to reference this folder and Visual studio could read the dlls from there, instead of me having to copy the dlls everytime. What would be a good way to handle this ?</p>\n"
p446
sg18
VSpecifying the path to the DLL file in your project's settings does not ensure\u000athat your application will find the DLL at run-time. You only told Visual\u000aStudio how to find the files it needs. That has nothing to do with how the\u000aprogram finds what it needs, once built. Placing the DLL file into the same\u000afolder as the executable is by far the simplest solution. That's the default\u000asearch path for dependencies, so you won't need to do anything special if you\u000ago that route. To avoid having to do this manually each time, you can create a\u000aPost-Build Event for your project that will automatically copy the DLL into\u000athe appropriate directory after a build completes. Alternatively, you could\u000adeploy the DLL to the Windows side-by-side cache, and add a manifest to your\u000aapplication that specifies the location.\u000a\u000a
p447
sg20
I1441235555
sg21
I4953843
sg23
I01
sg24
I4953976
sbsS'298708'
p448
(iQuestion
Question
p449
(dp450
g4
I01
sg5
I356
sg6
(lp451
Vc++
p452
aVvisual-studio
p453
aVdebugging
p454
aVcommand-line
p455
asg13
VDebugging with command-line parameters in Visual Studio
p456
sg15
I534
sg16
S"<p>I'm developing a C++ command-line application in Visual Studio and need to debug it with command-line arguments. At the moment I just run the generated EXE file with the arguments I need (like this <code>program.exe -file.txt</code>) , but this way I can't debug. Is there somewhere I can specify the arguments for debugging?</p>\n"
p457
sg18
VYes, it's on the Debugging section of the properties page of the project. In\u000aVS 2008, 2010, 2012, 2013 or 2015, right-click the project, choose properties,\u000ago to the Debugging section -- there is a box for "Command Arguments".\u000a\u000a
p458
sg20
I1469557927
sg21
I298708
sg22
I01
sg23
I01
sg24
I298713
sbsS'9928238'
p459
(iQuestion
Question
p460
(dp461
g4
I01
sg5
I90
sg6
(lp462
Vc++
p463
aVvisual-studio
p464
aVvisual-c++
p465
aVunresolved-external
p466
asg13
VUnresolved external symbol in object files
p467
sg15
I190
sg16
S'<p>During coding in Visual Studio I got an unresolved external symbol error\nand I\'ve got no idea what to do. I don\'t know what\'s wrong.\nCould you please decipher me? Where should I be looking for what kind of errors?</p>\n\n<pre><code>1&gt;Form.obj : error LNK2019: unresolved external symbol "public: class Field * __thiscall Field::addField(class Field *)" (?addField@Field@@QAEPAV1@PAV1@@Z) referenced in function "public: void __thiscall Form::parse(class std::basic_stringstream&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;)" (?parse@Form@@QAEXAAV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)\n1&gt;Form.obj : error LNK2019: unresolved external symbol "public: virtual void __thiscall Field::parse(class std::basic_stringstream&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;)" (?parse@Field@@UAEXAAV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) referenced in function "public: __thiscall InputField::InputField(class std::basic_stringstream&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;)" (??0InputField@@QAE@AAV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)\n1&gt;Form.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall Field::prompt(void)" (?prompt@Field@@UAEXXZ)\n1&gt;Form.obj : error LNK2001: unresolved external symbol "public: virtual class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; __thiscall Field::getName(void)" (?getName@Field@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ)\n1&gt;Form.obj : error LNK2001: unresolved external symbol "public: virtual class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; __thiscall Field::getType(void)" (?getType@Field@@UAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ)\n1&gt;Form.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall Field::describe(void)" (?describe@Field@@UAEXXZ)\n1&gt;C:\\Users\\tomy\\Documents\\Visual Studio 2010\\Projects\\zapoctovkac++\\Debug\\zapoctovkac++.exe : fatal error LNK1120: 6 unresolved externals\n</code></pre>\n'
p468
sg18
VThis error often means that some function has a declaration, but not a\u000adefinition. Example: // A.hpp class A { public: void myFunc(); // Function\u000adeclaration }; // A.cpp // Function definition void A::myFunc() { // do stuff\u000a} **In your case, the definition cannot be found.** The issue could be that\u000ayou are including a header file, which brings in some function declarations,\u000abut you either: 1\u005c\u005c\u005c\u005c. do not define the functions in your cpp file (if you\u000awrote this code yourself) 2\u005c\u005c\u005c\u005c. do not include the lib/dll file that contains\u000athe definitions A common mistake is that you define a function as a standalone\u000aand forget the class selector, e.g. A::, in your _.cpp_ file: **Wrong:** void\u000amyFunc() { /* do stuff */ } **Right:** void A::myFunc() { /* do stuff */ }\u000a\u000a
p469
sg20
I1475930505
sg21
I9928238
sg22
I01
sg23
I01
sg24
I9928586
sbsS'5063334'
p470
(iQuestion
Question
p471
(dp472
g4
I01
sg5
I40
sg6
(lp473
Vc++
p474
aVvisual-studio
p475
aVvisual-c++
p476
aVcompiler-optimization
p477
aVcompiler-options
p478
asg13
VWhat is the difference between the /Ox and /O2 compiler options?
p479
sg15
I21
sg16
S'<p>Microsoft\'s C++ compiler (<code>cl.exe</code>, as included with Visual Studio) offers <a href="http://msdn.microsoft.com/en-us/library/k1ack8f1.aspx">several optimization switches</a>. The difference between most of them seems self-explanatory, but it\'s not clear to me what the difference is between <code>/O2</code> (which optimizes code for maximum speed) and <code>/Ox</code> (which selects "full optimization").</p>\n\n<p>I\'ve tried reading the <a href="http://msdn.microsoft.com/en-us/library/59a3b321.aspx">documentation</a> for the <code>/Ox</code> option, and it seems to confirm that this switch also enables optimizations for maximum speed, rather than size:</p>\n\n<blockquote>\n  <p>The <strong><code>/Ox</code></strong> compiler option produces code that favors execution speed over smaller size.</p>\n</blockquote>\n\n<p>But in particular, the following statement under the "Remarks" section caught my eye:</p>\n\n<blockquote>\n  <p>In general, specify <strong><code>/O2</code></strong> (Maximize Speed) instead of <strong><code>/Ox</code></strong>.</p>\n</blockquote>\n\n<p>So my question is, <strong>why should one generally favor <code>/O2</code> over <code>/Ox</code>?</strong> Does the latter option enable<br>\na particular optimization known to cause unforeseen bugs or otherwise unexpected behavior? Is it simply that the amount of optimization to be gained is not worth the additional compile time? Or is this just a completely meaningless "recommendation" resulting from the fact that <code>/O2</code> is the <em>default</em> option in VS?</p>\n'
p480
sg18
VAsha's answer cites a blog post about Visual Studio 2005, and is rather out of\u000adate. The latest version of the documentation is available here: * /Ox:\u000ahttps://msdn.microsoft.com/en-us/library/59a3b321.aspx * /O2:\u000ahttps://msdn.microsoft.com/en-us/library/8f8h5cxt.aspx According to those: *\u000a/Ox -> /Og /Oi /Ot /Oy /Ob2 * /O2 -> the same, but further adds /Gs /GF /Gy *\u000a/Gs controls stack checking calls * /GF eliminates duplicate strings * /Gy\u000adoes function level linking It seems that /O2 sets /Gs without a value, which\u000aimplies a default value of /Gs0. And from the docs for that: > /Gs0 activates\u000astack probes for every function call that requires storage for local\u000avariables. This can have a negative impact on performance. So /O2 may well\u000aactually be slower than /Ox for you, solely due to that. IMO that's surprising\u000aenough to look like a bug (either in the docs or the implementation). You may\u000aadditionally be interested in /GS- which turns off security checks around the\u000astack, which can be a significant performance hit (see the MS docs for /GS).\u000aYou should benchmark your specific application, as ever.\u000a\u000a
p481
sg20
I1465295379
sg21
I5063334
sg23
I01
sg24
I29414111
sbs.