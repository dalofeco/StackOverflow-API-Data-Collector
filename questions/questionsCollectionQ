<<<<<<< HEAD
(dp0
S'335408'
p1
(iQuestion
Question
p2
(dp3
S'question_score'
p4
I53
sS'tags'
p5
(lp6
Vc++
p7
aVvisual-studio
p8
aVheader
p9
asS'lastActivityDate'
p10
I1456440512
sS'answer_score'
p11
I68
sS'question_body'
p12
S"<p>I checked out a copy of a C++ application from SourceForge (HoboCopy, if you're curious) and tried to compile it.  Visual Studio tells me that it can't find a particular header file.  I found the file in the source tree, but where do I need to put it, so that it will be found when compiling?<br>\nAre there special directories?</p>\n"
p13
sS'answer'
p14
VVisual Studio looks for headers in this order * in the current source\u000adirectory * in the Additional Include Directories in the project properties.\u000a(Under C++ | General) * in the Visual Studio C++ Include directories under\u000aTools | Options | Projects and Solutions | VC++ Directories. In your case, add\u000athe directory that the header is in to the project properties.\u000a\u000a
p15
sS'answerFetched'
p16
I01
sS'title'
p17
VWhere does Visual Studio look for C++ Header files?
p18
sS'isAnswered'
p19
I01
sS'approved'
p20
I01
sS'question_id'
p21
I335408
sS'answer_id'
p22
I335426
sbsS'859304'
p23
(iQuestion
Question
p24
(dp25
g4
I34
sg5
(lp26
Vc++
p27
aVvisual-studio
p28
aVvisual-c++
p29
aVunicode
p30
aVmfc
p31
asg10
I1436577727
sg11
I48
sg12
S'<p>How do I convert from <code>CString</code> to <code>const char*</code> in my Unicode MFC application?</p>\n'
p32
sg14
VTo convert a TCHAR CString to ASCII, use the CT2A macro - this will also allow\u000ayou to convert the string to UTF8 (or any other Windows code page): // Convert\u000ausing the local code page CString str(_T("Hello, world!")); CT2A ascii(str);\u000aTRACE(_T("ASCII: %S\u005cn"), ascii.m_psz); // Convert to UTF8 CString str(_T("Some\u000aUnicode goodness")); CT2A ascii(str, CP_UTF8); TRACE(_T("UTF8: %S\u005cn"),\u000aascii.m_psz); // Convert to Thai code page CString str(_T("Some Thai text"));\u000aCT2A ascii(str, 874); TRACE(_T("Thai: %S\u005cn"), ascii.m_psz); There is also a\u000amacro to convert from ASCII -> Unicode (CA2T) and you can use these in ATL/WTL\u000aapps as long as you have VS2003 or greater. See the MSDN for more info.\u000a\u000a
p33
sg16
I01
sg17
VConvert CString to const char*
p34
sg19
I01
sg20
I01
sg21
I859304
sg22
I859841
sbsS'1137966'
p35
(iQuestion
Question
p36
(dp37
g19
I01
sg4
I102
sg5
(lp38
Vc++
p39
aVc
p40
aVvisual-studio
p41
aVinclude
p42
asg17
VDisplaying the #include hierarchy for a C++ file in Visual Studio
p43
sg11
I143
sg12
S"<p><strong>Problem:</strong> I have a large Visual C++ project that I'm trying to migrate to Visual Studio 2010.  It's a huge mix of stuff from various sources and of various ages.  I'm getting problems because something is including both <code>winsock.h</code> and <code>winsock2.h</code>.</p>\n\n<p><strong>Question:</strong> What tools and techniques are there for displaying the <code>#include</code> hierarchy for a Visual Studio C++ source file?</p>\n\n<p>I know about <strong><code>cl /P</code></strong> for getting the preprocessor output, but that doesn't clearly show which file includes which other files (and in this case the <strong><code>/P</code></strong> output is 376,932 lines long 8-)</p>\n\n<p>In a perfect world I'd like a hierarchical display of which files include which other files, along with line numbers so I can jump into the sources:</p>\n\n<pre><code>source.cpp(1)\n  windows.h(100)\n    winsock.h\n  some_other_thing.h(1234)\n    winsock2.h\n</code></pre>\n"
p44
sg14
VThere is a setting: Project Settings -> Configuration Properties -> C/C++ ->\u000aAdvanced -> Show Includes that will generate the tree. It maps to the compiler\u000aswitch /showIncludes\u000a\u000a
p45
sg10
I1404934745
sg21
I1137966
sg20
I01
sg16
I01
sg22
I1138045
sbsS'75180'
p46
(iQuestion
Question
p47
(dp48
g4
I108
sg5
(lp49
Vc++
p50
aVc
p51
aVvisual-studio
p52
aVdebugging
p53
asg10
I1439094516
sg11
I146
sg12
S'<p>If you have a statically allocated array, the Visual Studio debugger can easily display all of the array elements.  However, if you have an array allocated dynamically and pointed to by a pointer, it will only display the first element of the array when you click the + to expand it.  Is there an easy way to tell the debugger, show me this data as an array of type Foo and size X?</p>\n'
p54
sg14
VYes, simple. say you have char *a = new char[10]; writing in the debugger:\u000aa,10 would show you the content as if it were an array.\u000a\u000a
p55
sg16
I01
sg17
VHow to display a dynamically allocated array in the Visual Studio debugger?
p56
sg19
I01
sg20
I01
sg21
I75180
sg22
I75202
sbsS'18304632'
p57
(iQuestion
Question
p58
(dp59
g19
I01
sg4
I55
sg5
(lp60
Vc++
p61
aVvisual-studio
p62
asg17
VWhat is Security Development Lifecycle Checks option in Visual Studio?
p63
sg11
I53
sg12
S"<p>I am using Visual Studio 2013 Preview, although I'm sure I've seen it in earlier versions. When creating a new project using the wizard, I select C++, Win32 Console Application, and there is an option to enable Security Development Lifecycle Checks on my project. Could someone explain exactly what this option does to my code/project?</p>\n"
p64
sg14
VThe /sdl switch is described here. It turns some warnings into errors, which\u000adoes not affect your code. Furthermore, it applies the /GS check more\u000aaggresively. Don't expect too much from it. The Microsoft SDL is really a\u000aworkaround for 1980's style C programming. Even it you use 20th century C++,\u000ayou don't need it. E.g. operator+(std::string, std::string) is both safe and\u000aportable. Microsoft's SDL solution here in contrast is not portable, nor is it\u000asafe - the idea behind /GS is to find errors with C string handling at runtime\u000aand abort the program, limiting the consequences but not making it safe.\u000a\u000a
p65
sg10
I1376899783
sg21
I18304632
sg20
I01
sg16
I01
sg22
I18309123
sbsS'12824595'
p66
(iQuestion
Question
p67
(dp68
g19
I01
sg4
I30
sg5
(lp69
Vc++
p70
aVvisual-studio
p71
aVg++
p72
asg17
VDifference between <cstring> and <string>
p73
sg11
I28
sg12
S"<p>Earlier today (actually yesterday due to my time-zone) I was attempting a programming interview using <em>Visual Studio 2012</em> for C++ on Interview Street (which uses <em>g++</em>).</p>\n\n<p>To be brief, I came across several compilation errors<sup>1</sup> when I was using</p>\n\n<pre><code>#include &lt;cstring&gt;\n</code></pre>\n\n<p>which was provided by the skeleton code in one of the question, and after turning to </p>\n\n<pre><code>#include &lt;string&gt;\n</code></pre>\n\n<p>all compilation errors magically disappeared.</p>\n\n<p>However, upon submission to Interview Street, I had to add <code>c</code> back; otherwise I got compilation errors.</p>\n\n<p>It was the first time I was bitten by non-standardization....</p>\n\n<p>My question is: what inside <code>&lt;string&gt;</code> and <code>&lt;cstring&gt;</code> took me (precious) more than half an hour?</p>\n\n<hr>\n\n<p><sup>1</sup> For anyone who is curious:</p>\n\n<p>One error by Visual Studio 2012 if <code>using &lt;cstring&gt;</code> is:</p>\n\n<blockquote>\n  <p>error C2338: The C++ Standard doesn't provide a hash for this type.</p>\n</blockquote>\n\n<p>in</p>\n\n<blockquote>\n  <p>c:\\program files (x86)\\microsoft visual studio 11.0\\vc\\include\\xstddef</p>\n</blockquote>\n\n<p>possibly for <code>string</code> as key in <code>unordered_map</code></p>\n\n<p>One error by g++ if <code>using &lt;string&gt;</code> is:</p>\n\n<blockquote>\n  <p>'strlen' was not declared in this scope</p>\n</blockquote>\n"
p74
sg14
S"<p>The <code>cstring</code> header provides functions for dealing with C-style strings \xe2\x80\x94 null-terminated arrays of characters. This includes functions like <code>strlen</code> and <code>strcpy</code>. It's the C++ version of the classic <code>string.h</code> header from C.</p>\n\n<p>The <code>string</code> header provides the <code>std::string</code> class and related functions and operators.</p>\n\n<p>The headers have similar names, but they're not really related beyond that. They cover separate tasks.</p>\n"
p75
sS'parseFailed'
p76
I01
sg10
I1349935750
sg21
I12824595
sg20
I01
sg16
I01
sg22
I12824665
sbsS'312312'
p77
(iQuestion
Question
p78
(dp79
g4
I46
sg5
(lp80
Vc++
p81
aVvisual-studio
p82
aVvisual-studio-2005
p83
asg10
I1468815731
sg11
I105
sg12
S"<p>I have a Visual Studio 2005 C++ program that runs differently in Release mode than it does in Debug mode.  In release mode, there's an (apparent) intermittent crash occurring.  In debug mode, it doesn't crash.  What are some reasons that a Release build would work differently than a Debug build?</p>\n\n<p>It's also worth mentioning my program is fairly complex and uses several 3rd party libraries for XML processing, message brokering, etc...</p>\n\n<p>Thanks in advance!</p>\n"
p84
sg14
V**Surviving the Release Version** gives a good overview. Things I have encountered - most are already mentioned **Variable initialization** by far the most common. In Visual Studio, debug builds explicitely initialize allocated memory to given values, see e.g. Memory Values here. These values are usually easy to spot, cause an out of bounds error when used as an index or an access violation when used as a pointer. An uninitialized boolean is true, however, and may cause uninitialized memory bugs going undetected for years. In Release builds where memory isn't explicitely initialized it just keeps the contents that it had before. This leads to "funny values" and "random" crashes, but as often to deterministic crashes that require an apparently unrelated command to be executed before the command that actually crashes. This is caused by the first command "setting up" the memory location with specific values, and when the memory locations are recycled the second command sees them as initializations. That's more common with uninitialized stack variables than heap, but the latter has happened to me, too. Raw memory initialization can also be different in a release build whether you start from visual studio (debugger attached) vs. starting from explorer. That makes the "nicest" kind of release build bugs that never appear under the debugger. **Valid Optimizations** come second in my exeprience. The C++ standard allows lots of optimizations to take place which may be surprising but are entirely valid e.g. when two pointers alias the same memory location, order of initialization is not considered, or multiple threads modify the same memory locations, and you expect a certain order in which thread B sees the changes made by thread A. Often, the compiler is blamed for these. Not so fast, young yedi! - see below **Timing** Release builds don't just "run faster", for a variety of reasons (optimizations, logging functions providing a thread sync point, debug code like asserts not executed etc.) also the relative timing between operations change dramatically. Most common problem uncovered by that is race conditions, but also deadlocks and simple "different order" execution of message/timer/event-based code. Even though they are timing problems, they _can_ be surprisingly stable across builds and platforms, with reproductions that "work always, except on PC 23". **Guard Bytes**. Debug builds often put (more) guard bytes around selected instances and allocations, to protect against index overflows and sometimes underflows. In the rare cases where the code relies on offsets or sizes, e.g. serializing raw structures, they are different. **Other code differences** Some instructions - e.g asserts - evaluate to nothing in release builds. Sometimes they have different side effects. This is prevalent with macro trickery, as in the classic (warning: multiple errors) #ifdef DEBUG #define Log(x) cout << #x << x << "\u005cn"; #else #define Log(x) #endif if (foo) Log(x) if (bar) Run(); Which, in a release build, evaluates to _if (foo && bar)_ This type of error is very very rare with normal C/C++ code, and macros that are correctly written. **Compiler Bugs** This really never ever happens. Well - it does, but you are for the most part of your career better off assuming it does not. In a decade of working with VC6, I found one where I am still convinced this is an unfixed compiler bug, compared to dozens of patterns (maybe even hundreds of instances) with insufficient understanding of the scripture (a.k.a. the standard). \u000a\u000a
p85
sg16
I01
sg17
VWhat are some reasons a Release build would run differently than a Debug build
p86
sg19
I01
sg20
I01
sg21
I312312
sg22
I312352
sbsS'3695174'
p87
(iQuestion
Question
p88
(dp89
g4
I51
sg5
(lp90
Vc++
p91
aVvisual-studio
p92
aVvisual-c++
p93
aVvisual-studio-2010
p94
aVvisual-c++-2010
p95
asg10
I1420133319
sg11
I70
sg12
S'<p>I\'ve just been beaten (rather hardly) on the head by some non-trivial warning from Visual Studio 2010 (C++).</p>\n\n<p>The compilation gave the following output:</p>\n\n<blockquote>\n  <p>1 Debug\\is.obj : warning LNK4042: object specified more than once; extras ignored<br>\n  1 Debug\\make.obj : warning LNK4042: object specified more than once; extras ignored<br>\n  1 Debug\\view.obj : warning LNK4042: object specified more than once; extras ignored<br>\n  1 identity.obj : error LNK2019: unresolved external symbol <code>void __cdecl\n  test::identity::view(void)</code> (?view@identity@test@@YAXXZ) referenced in function <code>void __cdecl test::identity::identity(void)</code> (?identity@0test@@YAXXZ)<br>\n  1 identity.obj : error LNK2019: unresolved external symbol <code>void __cdecl test::identity::make(void)</code> (?make@identity@test@@YAXXZ) referenced in function <code>void __cdecl test::identity::identity(void)</code> (?identity@0test@@YAXXZ)<br>\n  1 range.obj : error LNK2019: unresolved external symbol <code>void __cdecl test::range::is(void)</code> (?is@range@test@@YAXXZ) referenced in function <code>void __cdecl test::range::range(void)</code> (?range@0test@@YAXXZ)  </p>\n</blockquote>\n\n<p>Linker errors are always a pain to debug... but there were unresolved references, and so I checked... but the source is well-formed... and finally it hit me:</p>\n\n<p>My folder hierarchy looks like so:</p>\n\n<pre><code>src/\n  identity/\n    is.cpp\n    make.cpp\n    view.cpp\n  range/\n    is.cpp\n    make.cpp\n    view.cpp\n</code></pre>\n\n<p>and so does the hierarchy in the Solution (I always set it up so that it mimicks the "real" folder structure).</p>\n\n<p>And the diagnostic outputs:</p>\n\n<pre><code>Debug\\is.obj\nDebug\\make.obj\nDebug\\view.obj\n</code></pre>\n\n<p>Along with a warning which says that the <code>.obj</code> has been passed twice to the linker and that one will be ignored.</p>\n\n<p>Search no more: Visual has neatly flatten my folder hierarchy, and therefore is unable to neatly compile the source.</p>\n\n<p>At the moment, I am simply thinking of renaming the files, that should cover the issue...</p>\n\n<p>... but is there a way to have Visual Studio NOT flatten the file hierarchy ?</p>\n'
p96
sg14
VJust wanted to cross post what I believe to be the answer, if you open the\u000aproperties for the entire project, and the change the value under C/C++ ->\u000aOutput Files -> "Object File Name" to be the following:\u000a$(IntDir)/%(RelativeDir)/ Under VS 2010, I believe this will disambiguate all\u000aof the object files (as I believe windows won't let you under any crazy\u000acircumstances have two files with the same names in the same directory).\u000aPlease also check out the details here.\u000a\u000a
p97
sg16
I01
sg17
VVisual Studio 2010's strange "warning LNK4042"
p98
sg19
I01
sg20
I01
sg21
I3695174
sg22
I3731643
sbsS'14573411'
p99
(iQuestion
Question
p100
(dp101
g4
I35
sg5
(lp102
Vc++
p103
aVvisual-studio
p104
aVvisual-studio-2012
p105
asg10
I1431025972
sg11
I58
sg12
S'<p>I recently upgraded my IDE, but not my compiler from VS2010 to VS2012 and now I\'m having issues with one of my solutions. When I try to build it I get below message.</p>\n\n<blockquote>\n  <p>The project file has been renamed or is no longer in the solution </p>\n</blockquote>\n\n<p>And when I try to build the individual projects I get below message </p>\n\n<blockquote>\n  <p>A build is already in progress</p>\n</blockquote>\n\n<p>I\'ve tried removing and re-adding all the projects, but that doesn\'t help. I even created a brand new solution with all the same projects, but when I tried to build I got the same errors as with the original solution. </p>\n\n<p>I\'ve read that lot of people have similar problems to this, but none of their solutions have helped me so far.</p>\n\n<p>One suggestion was to see if any projects had any missing reference but I\'m not entirely sure how to go about doing that.</p>\n\n<p>I tried removing the references and re-adding them but every time I tried to re-add them I got the same error "The project file \'\' has been renamed or is no longer in the solution"</p>\n\n<p>Any help or suggestions would be awesome! </p>\n'
p106
sg14
VI had the same problem, and solved it by making sure that every project\u000areferenced by other projects were included in the solution. Right-click on the\u000afirst project, choose References... and make sure every project listed under\u000aReferences are included. Go to the next and do the same. That solved my\u000aproblem with "The Project file '' has been renamed or is no longer in the\u000asolution". Not sure about the problem with "A build is already in progress".\u000a\u000a
p107
sg16
I01
sg17
VVisual Studio 2012 The project file "" has been renamed or is no longer in the solution
p108
sg19
I01
sg20
I01
sg21
I14573411
sg22
I14722733
sbsS'2936757'
p109
(iQuestion
Question
p110
(dp111
g4
I52
sg5
(lp112
Vc++
p113
aVvisual-studio-2010
p114
aVvisual-studio
p115
aVc++11
p116
asg10
I1467877530
sg11
I56
sg12
S'<p>There is <a href="http://gcc.gnu.org/projects/cxx0x.html">a list</a> for GCC; is there a similar list for Visual Studio 2010?</p>\n'
p117
sg14
VThere is also a list for Visual C++ 2010 (that article describes the core\u000alanguage features that have been implemented; the PDF linked from the article\u000adescribes the library features that have been implemented). **Edit:** I've\u000ajust come across an awesome list: the Apache C++ Standard Library wiki has **a\u000atable listing the C++11 core language features** and which C++ compilers\u000asupport each of them.\u000a\u000a
p118
sg16
I01
sg17
VWhat C++11 features does Visual Studio 2010 support?
p119
sg19
I01
sg20
I01
sg21
I2936757
sg22
I2936759
sbsS'1626036'
p120
(iQuestion
Question
p121
(dp122
g19
I01
sg4
I23
sg5
(lp123
Vc++
p124
aVvisual-studio
p125
asg17
VHow do I collapse selected chunks of code in Visual Studio 2008?
p126
sg11
I39
sg12
S'<p>In Visual Studio 2008: Is there a way for me to customly collapse bits of code similar to like how I can automatically collapse chunks of comments?</p>\n'
p127
sg14
VYour piece of code needs to be a block surrounded by, as desired: * braces *\u000a#region and #endregion in C# * #pragma region and #pragma endregion in C/C++\u000aIf you can't collapse statement blocks, you need to enable this feature :\u000aTools -> Options -> Text Editor -> C/C++ -> Formatting -> check everything in\u000a"outlining" (In Visual Studio 2013 it's Tools -> Options -> Text Editor ->\u000aC/C++ -> View) Then, reopen the source file to reload outlining.\u000a\u000a
p128
sg10
I1393884745
sg21
I1626036
sg20
I01
sg16
I01
sg22
I1626053
sbsS'18298072'
p129
(iQuestion
Question
p130
(dp131
g4
I30
sg5
(lp132
Vc++
p133
aVvisual-studio
p134
aVvisual-studio-2013
p135
asg10
I1438271873
sg11
I29
sg12
S"<p>VS2013 has added auto-formatting for C++. My personal opinion on auto-formatting is that it's ultimately harmful for developers but I have to accept not everyone agrees. What bugs me is that I can't seem to disable auto-formatting completely. I have unchecked every checkbox under Tools->Text Editor->C/C++->Formatting->General yet when I type:</p>\n\n<pre><code>void f ()\n</code></pre>\n\n<p>VS2013 replaces this with</p>\n\n<pre><code>void f()\n</code></pre>\n\n<p>That's not the code-standard in this specific project which means I have to go back and insert a space. There are other examples where I have to fight against VS.</p>\n\n<p>I don't want to change the spacing settings because</p>\n\n<ol>\n<li>I work in multiple projects with different code standards</li>\n<li>I don't believe in auto-formatting so I just want it to get out of my way</li>\n</ol>\n\n<p>I just want VS to not modify my code automatically.</p>\n\n<p>PS. I am not against that VS can format code but I want to invoke that manually</p>\n"
p136
sg14
VYou can turn off automatic C++ code formatting by going to the **Options**\u000adialog from the **Tools** menu, selecting the **Text Editor -> C/C++ ->\u000aFormatting -> General** page, and unchecking all the boxes there. You'll still\u000abe able to manually format when all of the auto-formatting settings are turned\u000aoff.\u000a\u000a
p137
sg16
I01
sg17
VHow do I turn off auto-formatting in VS2013 for C++?
p138
sg19
I01
sg20
I01
sg21
I18298072
sg22
I18324386
sbsS'20448102'
p139
(iQuestion
Question
p140
(dp141
g19
I01
sg4
I27
sg5
(lp142
Vc++
p143
aVvisual-studio
p144
aVvisual-studio-2013
p145
asg17
VWhy does Visual Studio 2013 error on C4996?
p146
sg11
I40
sg12
S'<p>In previous versions of Visual Studio using functions like _sleep or strncpy just outputs a warning. In the latest version, it\'s suddenly an error:</p>\n\n<p><img src="http://i.stack.imgur.com/RaqHc.png" alt="unexpected error"></p>\n\n<p>I know I can disable it by adding <code>#pragma warning(disable: 4996)</code> in the beginning of the code, but it\'s extremely annoying that VS is trying to force me to use other functions. Is there any way to disable this behavior?</p>\n\n<p>Before you ask, "Treat Warnings As Errors" is disabled, and it errors even if I turn off all warnings!</p>\n'
p147
sg14
VApparently new projects enable "SDK check" by default now, which treats these\u000awarnings as errors. To disable it, go to project properties -> Configuration\u000aProperties -> C/C++ -> General -> SDL checks -> No.\u000a\u000a
p148
sg10
I1403021639
sg21
I20448102
sg20
I01
sg16
I01
sg22
I20448142
sbs.
=======

>>>>>>> 716fc0cf3d5b48ee4b6895e24c67c9076e339077
